// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Erc20CampaignCreated extends ethereum.Event {
  get params(): Erc20CampaignCreated__Params {
    return new Erc20CampaignCreated__Params(this);
  }
}

export class Erc20CampaignCreated__Params {
  _event: Erc20CampaignCreated;

  constructor(event: Erc20CampaignCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newCampaign(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _sharesMerkleRoot(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _sharesUri(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get _strategyUri(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get _guardian(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get _oracle(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get _rewardToken(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get salt(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }
}

export class EthCampaignCreated extends ethereum.Event {
  get params(): EthCampaignCreated__Params {
    return new EthCampaignCreated__Params(this);
  }
}

export class EthCampaignCreated__Params {
  _event: EthCampaignCreated;

  constructor(event: EthCampaignCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newCampaign(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _sharesMerkleRoot(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _sharesUri(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get _strategyUri(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get _guardian(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get _oracle(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get salt(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }
}

export class CampaignFactory extends ethereum.SmartContract {
  static bind(address: Address): CampaignFactory {
    return new CampaignFactory("CampaignFactory", address);
  }

  campaignAddress(master: Address, salt: Bytes): Address {
    let result = super.call(
      "campaignAddress",
      "campaignAddress(address,bytes32):(address)",
      [ethereum.Value.fromAddress(master), ethereum.Value.fromFixedBytes(salt)]
    );

    return result[0].toAddress();
  }

  try_campaignAddress(
    master: Address,
    salt: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "campaignAddress",
      "campaignAddress(address,bytes32):(address)",
      [ethereum.Value.fromAddress(master), ethereum.Value.fromFixedBytes(salt)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  erc20CampaignAddress(salt: Bytes): Address {
    let result = super.call(
      "erc20CampaignAddress",
      "erc20CampaignAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(salt)]
    );

    return result[0].toAddress();
  }

  try_erc20CampaignAddress(salt: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "erc20CampaignAddress",
      "erc20CampaignAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(salt)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ethCampaignAddress(salt: Bytes): Address {
    let result = super.call(
      "ethCampaignAddress",
      "ethCampaignAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(salt)]
    );

    return result[0].toAddress();
  }

  try_ethCampaignAddress(salt: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ethCampaignAddress",
      "ethCampaignAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(salt)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _masterErc20(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _masterEth(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateErc20CampaignCall extends ethereum.Call {
  get inputs(): CreateErc20CampaignCall__Inputs {
    return new CreateErc20CampaignCall__Inputs(this);
  }

  get outputs(): CreateErc20CampaignCall__Outputs {
    return new CreateErc20CampaignCall__Outputs(this);
  }
}

export class CreateErc20CampaignCall__Inputs {
  _call: CreateErc20CampaignCall;

  constructor(call: CreateErc20CampaignCall) {
    this._call = call;
  }

  get _sharesMerkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _sharesUri(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _strategyUri(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _guardian(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get salt(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _rewardToken(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class CreateErc20CampaignCall__Outputs {
  _call: CreateErc20CampaignCall;

  constructor(call: CreateErc20CampaignCall) {
    this._call = call;
  }
}

export class CreateEthCampaignCall extends ethereum.Call {
  get inputs(): CreateEthCampaignCall__Inputs {
    return new CreateEthCampaignCall__Inputs(this);
  }

  get outputs(): CreateEthCampaignCall__Outputs {
    return new CreateEthCampaignCall__Outputs(this);
  }
}

export class CreateEthCampaignCall__Inputs {
  _call: CreateEthCampaignCall;

  constructor(call: CreateEthCampaignCall) {
    this._call = call;
  }

  get _sharesMerkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _sharesUri(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _strategyUri(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _guardian(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get salt(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class CreateEthCampaignCall__Outputs {
  _call: CreateEthCampaignCall;

  constructor(call: CreateEthCampaignCall) {
    this._call = call;
  }
}
