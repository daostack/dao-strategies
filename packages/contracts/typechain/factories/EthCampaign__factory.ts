/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EthCampaign, EthCampaignInterface } from "../EthCampaign";

const _abi = [
  {
    inputs: [],
    name: "ActiveChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyInChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ValueIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CHALLENGE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initEthCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lock",
        type: "bool",
      },
    ],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f38806100206000396000f3fe6080604052600436106101235760003560e01c80637dc0d1d0116100a0578063c884ef8311610064578063c884ef8314610389578063cf309012146103b6578063d3f32357146103e0578063d54ad2a114610400578063da4493f61461041657600080fd5b80637dc0d1d01461030a57806385e3f9971461032a5780639637f47514610346578063a9ec3a1b1461035c578063c3a079ed1461037257600080fd5b8063452a9320116100e7578063452a932014610266578063619d51941461029e57806368742da6146102be578063717f9092146102de578063750142e6146102f457600080fd5b80630787bc27146101a457806317b9d05e146101e45780633d13f874146102065780634009634114610226578063414f33dd1461024657600080fd5b3661019f57336000908152600b602052604081208054349290610147908490610e35565b9250508190555034600860008282546101609190610e35565b9091555050604080513381523460208201527fa8044513073c23047a922f0bf7142f18c341a73184b9f8055349b4415fb9d6ca910160405180910390a1005b600080fd5b3480156101b057600080fd5b506101d16101bf366004610c68565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156101f057600080fd5b506102046101ff366004610d36565b61042c565b005b34801561021257600080fd5b50610204610221366004610c8a565b61050e565b34801561023257600080fd5b50610204610241366004610d58565b6106fa565b34801561025257600080fd5b50610204610261366004610d58565b61070c565b34801561027257600080fd5b50600554610286906001600160a01b031681565b6040516001600160a01b0390911681526020016101db565b3480156102aa57600080fd5b506102046102b9366004610d14565b6107d9565b3480156102ca57600080fd5b506102046102d9366004610c68565b610817565b3480156102ea57600080fd5b506101d160045481565b34801561030057600080fd5b506101d160085481565b34801561031657600080fd5b50600654610286906001600160a01b031681565b34801561033657600080fd5b506101d1670de0b6b3a764000081565b34801561035257600080fd5b506101d160025481565b34801561036857600080fd5b506101d160015481565b34801561037e57600080fd5b506101d162093a8081565b34801561039557600080fd5b506101d16103a4366004610c68565b600a6020526000908152604090205481565b3480156103c257600080fd5b506009546103d09060ff1681565b60405190151581526020016101db565b3480156103ec57600080fd5b506102046103fb366004610d9e565b6108f0565b34801561040c57600080fd5b506101d160075481565b34801561042257600080fd5b506101d160035481565b6006546001600160a01b03163314610457576040516380fee10560e01b815260040160405180910390fd5b60095460ff161561047b576040516303cb96db60e21b815260040160405180910390fd5b6002541580159061048d575060035442105b156104ab57604051633420251360e11b815260040160405180910390fd5b600280546001558290556104c262093a8042610e35565b60038190556040805184815260208101849052908101919091527ff538af40d5ad77456cbcd96a5be317d724e66e0e08eb217c14812308bd43d35e906060015b60405180910390a15050565b6000600354421161052157600154610525565b6002545b6040516bffffffffffffffffffffffff19606088901b166020820152603481018690529091506000906054016040516020818303038152906040528051906020012090506105a9848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250859150610a959050565b6105c6576040516309bde33960e01b815260040160405180910390fd5b60006007546008546105d89190610e35565b6001600160a01b0388166000908152600a602052604081205491925090670de0b6b3a76400006106088985610e6f565b6106129190610e4d565b61061c9190610e8e565b90508061063c57604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b0388166000908152600a602052604081208054839290610664908490610e35565b92505081905550806007600082825461067d9190610e35565b9250508190555080600860008282546106969190610e8e565b909155506106a690508882610aab565b604080516001600160a01b038a168152602081018990529081018290527f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060600160405180910390a15050505050505050565b6107068484848461070c565b50505050565b60006107186001610b50565b90508015610730576000805461ff0019166101001790555b6004849055600580546001600160a01b038086166001600160a01b0319928316179092556006805492851692909116919091179055841561078557600285905561077d62093a8042610e35565b60035561078c565b6000196003555b80156107d2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6005546001600160a01b0316331461080457604051636570ecab60e11b815260040160405180910390fd5b6009805460ff1916911515919091179055565b60095460ff1680156108295750600154155b156108d7576008546001600160a01b0382166000908152600b6020526040812054909161085591610e4d565b9050806108755760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600b60205260408120556108988282610aab565b604080516001600160a01b0384168152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649101610502565b60405163209a769d60e11b815260040160405180910390fd5b6005546001600160a01b0316331461091b57604051636570ecab60e11b815260040160405180910390fd5b60095460ff161561093f576040516303cb96db60e21b815260040160405180910390fd5b60025415801590610951575060035442115b1561096f57604051631b69dd1760e21b815260040160405180910390fd5b6000600255600019600355600181600281111561098e5761098e610ed6565b14156109ea57604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b1580156109cd57600080fd5b505af11580156109e1573d6000803e3d6000fd5b50505050610a5b565b60028160028111156109fe576109fe610ed6565b1415610a5b57604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b158015610a3d57600080fd5b505af1158015610a51573d6000803e3d6000fd5b5050600060015550505b7f0b700a39eebc9d322d0a5829d3d6447d9e000f73a89a7baa6a0fa28a5ec9c8d081604051610a8a9190610dbf565b60405180910390a150565b600082610aa28584610bdd565b14949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610af8576040519150601f19603f3d011682016040523d82523d6000602084013e610afd565b606091505b5050905080610b4b5760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b60448201526064015b60405180910390fd5b505050565b60008054610100900460ff1615610b97578160ff166001148015610b735750303b155b610b8f5760405162461bcd60e51b8152600401610b4290610de7565b506000919050565b60005460ff808416911610610bbe5760405162461bcd60e51b8152600401610b4290610de7565b506000805460ff191660ff92909216919091179055600190565b919050565b600081815b8451811015610c49576000858281518110610bff57610bff610eec565b60200260200101519050808311610c255760008381526020829052604090209250610c36565b600081815260208490526040902092505b5080610c4181610ea5565b915050610be2565b509392505050565b80356001600160a01b0381168114610bd857600080fd5b600060208284031215610c7a57600080fd5b610c8382610c51565b9392505050565b60008060008060608587031215610ca057600080fd5b610ca985610c51565b935060208501359250604085013567ffffffffffffffff80821115610ccd57600080fd5b818701915087601f830112610ce157600080fd5b813581811115610cf057600080fd5b8860208260051b8501011115610d0557600080fd5b95989497505060200194505050565b600060208284031215610d2657600080fd5b81358015158114610c8357600080fd5b60008060408385031215610d4957600080fd5b50508035926020909101359150565b60008060008060808587031215610d6e57600080fd5b8435935060208501359250610d8560408601610c51565b9150610d9360608601610c51565b905092959194509250565b600060208284031215610db057600080fd5b813560038110610c8357600080fd5b6020810160038310610de157634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115610e4857610e48610ec0565b500190565b600082610e6a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e8957610e89610ec0565b500290565b600082821015610ea057610ea0610ec0565b500390565b6000600019821415610eb957610eb9610ec0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220e8be299df985fc11e392942102cbba89563ffb06fd491a105fac5b58bdb1c51f64736f6c63430008060033";

type EthCampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthCampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthCampaign__factory extends ContractFactory {
  constructor(...args: EthCampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EthCampaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthCampaign> {
    return super.deploy(overrides || {}) as Promise<EthCampaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EthCampaign {
    return super.attach(address) as EthCampaign;
  }
  connect(signer: Signer): EthCampaign__factory {
    return super.connect(signer) as EthCampaign__factory;
  }
  static readonly contractName: "EthCampaign";
  public readonly contractName: "EthCampaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthCampaignInterface {
    return new utils.Interface(_abi) as EthCampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthCampaign {
    return new Contract(address, _abi, signerOrProvider) as EthCampaign;
  }
}
