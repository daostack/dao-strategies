/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EthCampaign, EthCampaignInterface } from "../EthCampaign";

const _abi = [
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDuringEvaluationPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SharesAlreadyPublished",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "campaignCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPeriodStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "funds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
    ],
    name: "initEthCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "publishShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPublished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c69806100206000396000f3fe60806040526004361061010d5760003560e01c80637dc0d1d011610095578063d11bad0611610064578063d11bad0614610316578063d54ad2a114610336578063e2ae93fb1461034c578063eac989f814610379578063edcadc621461038f57600080fd5b80637dc0d1d014610294578063980e7844146102b4578063b01a4c20146102c9578063c884ef83146102e957600080fd5b8063452a9320116100dc578063452a9320146101f657806358c13b7e1461022e57806363a5b88d1461024457806368742da61461025e578063750142e61461027e57600080fd5b806305462a2a146101565780632e2da9bf146101785780633a98ef39146101ac5780633d13f874146101d657600080fd5b3661015157336000908152600a602052604081208054349290610131908490610b7c565b92505081905550346007600082825461014a9190610b7c565b9091555050005b600080fd5b34801561016257600080fd5b50610176610171366004610aad565b6103a5565b005b34801561018457600080fd5b5060085461019790610100900460ff1681565b60405190151581526020015b60405180910390f35b3480156101b857600080fd5b506101c8670de0b6b3a764000081565b6040519081526020016101a3565b3480156101e257600080fd5b506101766101f1366004610a23565b61040d565b34801561020257600080fd5b50600354610216906001600160a01b031681565b6040516001600160a01b0390911681526020016101a3565b34801561023a57600080fd5b506101c860055481565b34801561025057600080fd5b506008546101979060ff1681565b34801561026a57600080fd5b50610176610279366004610a01565b6105ba565b34801561028a57600080fd5b506101c860075481565b3480156102a057600080fd5b50600454610216906001600160a01b031681565b3480156102c057600080fd5b5061017661063d565b3480156102d557600080fd5b506101766102e4366004610ac6565b61069a565b3480156102f557600080fd5b506101c8610304366004610a01565b60096020526000908152604090205481565b34801561032257600080fd5b50610176610331366004610ac6565b610761565b34801561034257600080fd5b506101c860065481565b34801561035857600080fd5b506101c8610367366004610a01565b600a6020526000908152604090205481565b34801561038557600080fd5b506101c860025481565b34801561039b57600080fd5b506101c860015481565b6004546001600160a01b031633146103d0576040516380fee10560e01b815260040160405180910390fd5b600854610100900460ff16156103f95760405163e2c7026360e01b815260040160405180910390fd5b6008805461ff001916610100179055600155565b6104156107d5565b61043257604051638ebaa35d60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506104b4838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506001549150849050610803565b6104d1576040516309bde33960e01b815260040160405180910390fd5b60006006546007546104e39190610b7c565b6001600160a01b03871660009081526009602052604081205491925090670de0b6b3a76400006105138885610bb6565b61051d9190610b94565b6105279190610bd5565b90508061054757604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b0387166000908152600960205260408120805483929061056f908490610b7c565b9250508190555080600660008282546105889190610b7c565b9250508190555080600760008282546105a19190610bd5565b909155506105b190508782610819565b50505050505050565b6105c26108be565b6105df5760405163209a769d60e11b815260040160405180910390fd5b6001600160a01b0381166000908152600a6020526040902054806106165760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600a60205260408120556106398282610819565b5050565b6003546001600160a01b0316331461066857604051636570ecab60e11b815260040160405180910390fd5b60055442111561068b5760405163148cb5d760e01b815260040160405180910390fd5b6008805460ff19166001179055565b60006106a660016108e9565b905080156106be576000805461ff0019166101001790555b60018790556002869055600380546001600160a01b038088166001600160a01b0319928316179092556004805492871692909116919091179055600880548415156101000261ff0019909116179055600582905580156105b1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150505050505050565b600061076d60016108e9565b90508015610785576000805461ff0019166101001790555b61079387878787878761069a565b80156105b1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610750565b6000600554421180156107ef5750600854610100900460ff165b80156107fe575060085460ff16155b905090565b6000826108108584610976565b14949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610866576040519150601f19603f3d011682016040523d82523d6000602084013e61086b565b606091505b50509050806108b95760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b60448201526064015b60405180910390fd5b505050565b60085460009060ff16806107fe5750600554421180156107fe575050600854610100900460ff161590565b60008054610100900460ff1615610930578160ff16600114801561090c5750303b155b6109285760405162461bcd60e51b81526004016108b090610b2e565b506000919050565b60005460ff8084169116106109575760405162461bcd60e51b81526004016108b090610b2e565b506000805460ff191660ff92909216919091179055600190565b919050565b600081815b84518110156109e257600085828151811061099857610998610c1d565b602002602001015190508083116109be57600083815260208290526040902092506109cf565b600081815260208490526040902092505b50806109da81610bec565b91505061097b565b509392505050565b80356001600160a01b038116811461097157600080fd5b600060208284031215610a1357600080fd5b610a1c826109ea565b9392505050565b60008060008060608587031215610a3957600080fd5b610a42856109ea565b935060208501359250604085013567ffffffffffffffff80821115610a6657600080fd5b818701915087601f830112610a7a57600080fd5b813581811115610a8957600080fd5b8860208260051b8501011115610a9e57600080fd5b95989497505060200194505050565b600060208284031215610abf57600080fd5b5035919050565b60008060008060008060c08789031215610adf57600080fd5b8635955060208701359450610af6604088016109ea565b9350610b04606088016109ea565b925060808701358015158114610b1957600080fd5b8092505060a087013590509295509295509295565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115610b8f57610b8f610c07565b500190565b600082610bb157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610bd057610bd0610c07565b500290565b600082821015610be757610be7610c07565b500390565b6000600019821415610c0057610c00610c07565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220e27a78f5194f2fb7fb2a38a4b2369b4ad4505132df28120bf4e99c1035cc834064736f6c63430008060033";

type EthCampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthCampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthCampaign__factory extends ContractFactory {
  constructor(...args: EthCampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EthCampaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthCampaign> {
    return super.deploy(overrides || {}) as Promise<EthCampaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EthCampaign {
    return super.attach(address) as EthCampaign;
  }
  connect(signer: Signer): EthCampaign__factory {
    return super.connect(signer) as EthCampaign__factory;
  }
  static readonly contractName: "EthCampaign";
  public readonly contractName: "EthCampaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthCampaignInterface {
    return new utils.Interface(_abi) as EthCampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthCampaign {
    return new Contract(address, _abi, signerOrProvider) as EthCampaign;
  }
}
