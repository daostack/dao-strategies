/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EthCampaign, EthCampaignInterface } from "../EthCampaign";

const _abi = [
  {
    inputs: [],
    name: "ActiveChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyInChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ValueIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CHALLENGE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initEthCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lock",
        type: "bool",
      },
    ],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f28806100206000396000f3fe6080604052600436106101025760003560e01c8063717f909211610095578063c3a079ed11610064578063c3a079ed14610325578063c884ef831461033c578063cf30901214610369578063d3f3235714610393578063d54ad2a1146103b357600080fd5b8063717f9092146102bd578063750142e6146102d35780637dc0d1d0146102e957806385e3f9971461030957600080fd5b8063414f33dd116100d1578063414f33dd14610225578063452a932014610245578063619d51941461027d57806368742da61461029d57600080fd5b80630787bc271461018357806317b9d05e146101c35780633d13f874146101e5578063400963411461020557600080fd5b3661017e57336000908152600b602052604081208054349290610126908490610e25565b92505081905550346008600082825461013f9190610e25565b9091555050604080513381523460208201527fa8044513073c23047a922f0bf7142f18c341a73184b9f8055349b4415fb9d6ca910160405180910390a1005b600080fd5b34801561018f57600080fd5b506101b061019e366004610c58565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156101cf57600080fd5b506101e36101de366004610d26565b6103c9565b005b3480156101f157600080fd5b506101e3610200366004610c7a565b61049e565b34801561021157600080fd5b506101e3610220366004610d48565b61068a565b34801561023157600080fd5b506101e3610240366004610d48565b610708565b34801561025157600080fd5b50600554610265906001600160a01b031681565b6040516001600160a01b0390911681526020016101ba565b34801561028957600080fd5b506101e3610298366004610d04565b6107c9565b3480156102a957600080fd5b506101e36102b8366004610c58565b610807565b3480156102c957600080fd5b506101b060045481565b3480156102df57600080fd5b506101b060085481565b3480156102f557600080fd5b50600654610265906001600160a01b031681565b34801561031557600080fd5b506101b0670de0b6b3a764000081565b34801561033157600080fd5b506101b062093a8081565b34801561034857600080fd5b506101b0610357366004610c58565b600a6020526000908152604090205481565b34801561037557600080fd5b506009546103839060ff1681565b60405190151581526020016101ba565b34801561039f57600080fd5b506101e36103ae366004610d8e565b6108e0565b3480156103bf57600080fd5b506101b060075481565b6006546001600160a01b031633146103f4576040516380fee10560e01b815260040160405180910390fd5b60095460ff1615610418576040516303cb96db60e21b815260040160405180910390fd5b60035442101561043b57604051633420251360e11b815260040160405180910390fd5b6002805460015582905561045262093a8042610e25565b60038190556040805184815260208101849052908101919091527ff538af40d5ad77456cbcd96a5be317d724e66e0e08eb217c14812308bd43d35e906060015b60405180910390a15050565b600060035442116104b1576001546104b5565b6002545b6040516bffffffffffffffffffffffff19606088901b16602082015260348101869052909150600090605401604051602081830303815290604052805190602001209050610539848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250859150610a859050565b610556576040516309bde33960e01b815260040160405180910390fd5b60006007546008546105689190610e25565b6001600160a01b0388166000908152600a602052604081205491925090670de0b6b3a76400006105988985610e5f565b6105a29190610e3d565b6105ac9190610e7e565b9050806105cc57604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b0388166000908152600a6020526040812080548392906105f4908490610e25565b92505081905550806007600082825461060d9190610e25565b9250508190555080600860008282546106269190610e7e565b9091555061063690508882610a9b565b604080516001600160a01b038a168152602081018990529081018290527f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060600160405180910390a15050505050505050565b60006106966001610b40565b905080156106ae576000805461ff0019166101001790555b6106ba85858585610708565b8015610701576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050505050565b60006107146001610b40565b9050801561072c576000805461ff0019166101001790555b6004849055600580546001600160a01b038086166001600160a01b0319928316179092556006805492851692909116919091179055841561078157600285905561077962093a8042610e25565b6003556106ba565b6000196003558015610701576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016106f8565b6005546001600160a01b031633146107f457604051636570ecab60e11b815260040160405180910390fd5b6009805460ff1916911515919091179055565b60095460ff1680156108195750600154155b156108c7576008546001600160a01b0382166000908152600b6020526040812054909161084591610e3d565b9050806108655760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600b60205260408120556108888282610a9b565b604080516001600160a01b0384168152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649101610492565b60405163209a769d60e11b815260040160405180910390fd5b6005546001600160a01b0316331461090b57604051636570ecab60e11b815260040160405180910390fd5b60095460ff161561092f576040516303cb96db60e21b815260040160405180910390fd5b60025415801590610941575060035442115b1561095f57604051631b69dd1760e21b815260040160405180910390fd5b6000600255600019600355600181600281111561097e5761097e610ec6565b14156109da57604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b1580156109bd57600080fd5b505af11580156109d1573d6000803e3d6000fd5b50505050610a4b565b60028160028111156109ee576109ee610ec6565b1415610a4b57604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b158015610a2d57600080fd5b505af1158015610a41573d6000803e3d6000fd5b5050600060015550505b7f0b700a39eebc9d322d0a5829d3d6447d9e000f73a89a7baa6a0fa28a5ec9c8d081604051610a7a9190610daf565b60405180910390a150565b600082610a928584610bcd565b14949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ae8576040519150601f19603f3d011682016040523d82523d6000602084013e610aed565b606091505b5050905080610b3b5760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b60448201526064015b60405180910390fd5b505050565b60008054610100900460ff1615610b87578160ff166001148015610b635750303b155b610b7f5760405162461bcd60e51b8152600401610b3290610dd7565b506000919050565b60005460ff808416911610610bae5760405162461bcd60e51b8152600401610b3290610dd7565b506000805460ff191660ff92909216919091179055600190565b919050565b600081815b8451811015610c39576000858281518110610bef57610bef610edc565b60200260200101519050808311610c155760008381526020829052604090209250610c26565b600081815260208490526040902092505b5080610c3181610e95565b915050610bd2565b509392505050565b80356001600160a01b0381168114610bc857600080fd5b600060208284031215610c6a57600080fd5b610c7382610c41565b9392505050565b60008060008060608587031215610c9057600080fd5b610c9985610c41565b935060208501359250604085013567ffffffffffffffff80821115610cbd57600080fd5b818701915087601f830112610cd157600080fd5b813581811115610ce057600080fd5b8860208260051b8501011115610cf557600080fd5b95989497505060200194505050565b600060208284031215610d1657600080fd5b81358015158114610c7357600080fd5b60008060408385031215610d3957600080fd5b50508035926020909101359150565b60008060008060808587031215610d5e57600080fd5b8435935060208501359250610d7560408601610c41565b9150610d8360608601610c41565b905092959194509250565b600060208284031215610da057600080fd5b813560038110610c7357600080fd5b6020810160038310610dd157634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115610e3857610e38610eb0565b500190565b600082610e5a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e7957610e79610eb0565b500290565b600082821015610e9057610e90610eb0565b500390565b6000600019821415610ea957610ea9610eb0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212202bd94d6cfc14be4891a1fa4236c3f1a8828a6b287b81af720d6a21162907c13164736f6c63430008060033";

type EthCampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthCampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthCampaign__factory extends ContractFactory {
  constructor(...args: EthCampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EthCampaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthCampaign> {
    return super.deploy(overrides || {}) as Promise<EthCampaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EthCampaign {
    return super.attach(address) as EthCampaign;
  }
  connect(signer: Signer): EthCampaign__factory {
    return super.connect(signer) as EthCampaign__factory;
  }
  static readonly contractName: "EthCampaign";
  public readonly contractName: "EthCampaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthCampaignInterface {
    return new utils.Interface(_abi) as EthCampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthCampaign {
    return new Contract(address, _abi, signerOrProvider) as EthCampaign;
  }
}
