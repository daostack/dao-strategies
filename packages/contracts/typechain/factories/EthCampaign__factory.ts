/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EthCampaign, EthCampaignInterface } from "../EthCampaign";

const _abi = [
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDuringEvaluationPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SharesAlreadyPublished",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "campaignCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPeriodStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "funds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "publishShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPublished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bd2806100206000396000f3fe6080604052600436106101025760003560e01c8063750142e611610095578063c884ef8311610064578063c884ef83146102de578063d54ad2a11461030b578063e2ae93fb14610321578063eac989f81461034e578063edcadc621461036457600080fd5b8063750142e6146102735780637dc0d1d014610289578063980e7844146102a9578063b01a4c20146102be57600080fd5b8063452a9320116100d1578063452a9320146101eb57806358c13b7e1461022357806363a5b88d1461023957806368742da61461025357600080fd5b806305462a2a1461014b5780632e2da9bf1461016d5780633a98ef39146101a15780633d13f874146101cb57600080fd5b3661014657336000908152600a602052604081208054349290610126908490610ae5565b92505081905550346007600082825461013f9190610ae5565b9091555050005b600080fd5b34801561015757600080fd5b5061016b610166366004610a16565b61037a565b005b34801561017957600080fd5b5060085461018c90610100900460ff1681565b60405190151581526020015b60405180910390f35b3480156101ad57600080fd5b506101bd670de0b6b3a764000081565b604051908152602001610198565b3480156101d757600080fd5b5061016b6101e636600461098c565b6103e2565b3480156101f757600080fd5b5060035461020b906001600160a01b031681565b6040516001600160a01b039091168152602001610198565b34801561022f57600080fd5b506101bd60055481565b34801561024557600080fd5b5060085461018c9060ff1681565b34801561025f57600080fd5b5061016b61026e36600461096a565b6105b2565b34801561027f57600080fd5b506101bd60075481565b34801561029557600080fd5b5060045461020b906001600160a01b031681565b3480156102b557600080fd5b5061016b610658565b3480156102ca57600080fd5b5061016b6102d9366004610a2f565b6106b5565b3480156102ea57600080fd5b506101bd6102f936600461096a565b60096020526000908152604090205481565b34801561031757600080fd5b506101bd60065481565b34801561032d57600080fd5b506101bd61033c36600461096a565b600a6020526000908152604090205481565b34801561035a57600080fd5b506101bd60025481565b34801561037057600080fd5b506101bd60015481565b6004546001600160a01b031633146103a5576040516380fee10560e01b815260040160405180910390fd5b600854610100900460ff16156103ce5760405163e2c7026360e01b815260040160405180910390fd5b6008805461ff001916610100179055600155565b6103ea61077c565b61040757604051638ebaa35d60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506104898383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506107aa565b6104a6576040516309bde33960e01b815260040160405180910390fd5b60006006546007546104b89190610ae5565b6001600160a01b03871660009081526009602052604081205491925090670de0b6b3a76400006104e88885610b1f565b6104f29190610afd565b6104fc9190610b3e565b90508061051c57604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b03871660009081526009602052604081208054839290610544908490610ae5565b92505081905550806006600082825461055d9190610ae5565b9250508190555080600760008282546105769190610b3e565b909155506000905061058888836107c0565b9050806105a85760405163078ecf4160e41b815260040160405180910390fd5b5050505050505050565b6105ba61081e565b6105d75760405163209a769d60e11b815260040160405180910390fd5b6001600160a01b0381166000908152600a60205260409020548061060e5760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600a6020526040812081905561063383836107c0565b905080610653576040516369a4751b60e01b815260040160405180910390fd5b505050565b6003546001600160a01b0316331461068357604051636570ecab60e11b815260040160405180910390fd5b6005544211156106a65760405163148cb5d760e01b815260040160405180910390fd5b6008805460ff19166001179055565b60006106c16001610849565b905080156106d9576000805461ff0019166101001790555b60018790556002869055600380546001600160a01b038088166001600160a01b0319928316179092556004805492871692909116919091179055600880548415156101000261ff001990911617905560058290558015610773576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6000600554421180156107965750600854610100900460ff165b80156107a5575060085460ff16155b905090565b6000826107b785846108df565b14949350505050565b600080836001600160a01b03168360405160006040518083038185875af1925050503d806000811461080e576040519150601f19603f3d011682016040523d82523d6000602084013e610813565b606091505b509095945050505050565b60085460009060ff16806107a55750600554421180156107a5575050600854610100900460ff161590565b60008054610100900460ff1615610899578160ff16600114801561086c5750303b155b6108915760405162461bcd60e51b815260040161088890610a97565b60405180910390fd5b506000919050565b60005460ff8084169116106108c05760405162461bcd60e51b815260040161088890610a97565b506000805460ff191660ff92909216919091179055600190565b919050565b600081815b845181101561094b57600085828151811061090157610901610b86565b602002602001015190508083116109275760008381526020829052604090209250610938565b600081815260208490526040902092505b508061094381610b55565b9150506108e4565b509392505050565b80356001600160a01b03811681146108da57600080fd5b60006020828403121561097c57600080fd5b61098582610953565b9392505050565b600080600080606085870312156109a257600080fd5b6109ab85610953565b935060208501359250604085013567ffffffffffffffff808211156109cf57600080fd5b818701915087601f8301126109e357600080fd5b8135818111156109f257600080fd5b8860208260051b8501011115610a0757600080fd5b95989497505060200194505050565b600060208284031215610a2857600080fd5b5035919050565b60008060008060008060c08789031215610a4857600080fd5b8635955060208701359450610a5f60408801610953565b9350610a6d60608801610953565b925060808701358015158114610a8257600080fd5b8092505060a087013590509295509295509295565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115610af857610af8610b70565b500190565b600082610b1a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610b3957610b39610b70565b500290565b600082821015610b5057610b50610b70565b500390565b6000600019821415610b6957610b69610b70565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212209ed0f7c4114ae7028dad03fb42ab40072d46abec647432fefacdda662ce37e6264736f6c63430008060033";

type EthCampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthCampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthCampaign__factory extends ContractFactory {
  constructor(...args: EthCampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EthCampaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthCampaign> {
    return super.deploy(overrides || {}) as Promise<EthCampaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EthCampaign {
    return super.attach(address) as EthCampaign;
  }
  connect(signer: Signer): EthCampaign__factory {
    return super.connect(signer) as EthCampaign__factory;
  }
  static readonly contractName: "EthCampaign";
  public readonly contractName: "EthCampaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthCampaignInterface {
    return new utils.Interface(_abi) as EthCampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthCampaign {
    return new Contract(address, _abi, signerOrProvider) as EthCampaign;
  }
}
