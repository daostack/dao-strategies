/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EthCampaign, EthCampaignInterface } from "../EthCampaign";

const _abi = [
  {
    inputs: [],
    name: "ActiveChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CHALLENGE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initEthCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d07806100206000396000f3fe6080604052600436106100f75760003560e01c8063750142e61161008a578063c884ef8311610059578063c884ef83146102d9578063cf30901214610306578063d2ef739814610330578063d54ad2a11461034557600080fd5b8063750142e6146102705780637dc0d1d01461028657806385e3f997146102a6578063c3a079ed146102c257600080fd5b8063414f33dd116100c6578063414f33dd146101e2578063452a93201461020257806368742da61461023a578063717f90921461025a57600080fd5b80630787bc271461014057806317b9d05e146101805780633d13f874146101a257806340096341146101c257600080fd5b3661013b57336000908152600b60205260408120805434929061011b908490610c1a565b9250508190555034600860008282546101349190610c1a565b9091555050005b600080fd5b34801561014c57600080fd5b5061016d61015b366004610ab8565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561018c57600080fd5b506101a061019b366004610b64565b61035b565b005b3480156101ae57600080fd5b506101a06101bd366004610ada565b610430565b3480156101ce57600080fd5b506101a06101dd366004610b86565b61061c565b3480156101ee57600080fd5b506101a06101fd366004610b86565b61069a565b34801561020e57600080fd5b50600554610222906001600160a01b031681565b6040516001600160a01b039091168152602001610177565b34801561024657600080fd5b506101a0610255366004610ab8565b61075b565b34801561026657600080fd5b5061016d60045481565b34801561027c57600080fd5b5061016d60085481565b34801561029257600080fd5b50600654610222906001600160a01b031681565b3480156102b257600080fd5b5061016d670de0b6b3a764000081565b3480156102ce57600080fd5b5061016d62093a8081565b3480156102e557600080fd5b5061016d6102f4366004610ab8565b600a6020526000908152604090205481565b34801561031257600080fd5b506009546103209060ff1681565b6040519015158152602001610177565b34801561033c57600080fd5b506101a0610834565b34801561035157600080fd5b5061016d60075481565b6006546001600160a01b03163314610386576040516380fee10560e01b815260040160405180910390fd5b60095460ff16156103aa576040516303cb96db60e21b815260040160405180910390fd5b6003544210156103cd57604051633420251360e11b815260040160405180910390fd5b600280546001558290556103e462093a8042610c1a565b60038190556040805184815260208101849052908101919091527ff538af40d5ad77456cbcd96a5be317d724e66e0e08eb217c14812308bd43d35e906060015b60405180910390a15050565b6000600354421161044357600154610447565b6002545b6040516bffffffffffffffffffffffff19606088901b166020820152603481018690529091506000906054016040516020818303038152906040528051906020012090506104cb8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508692508591506108e59050565b6104e8576040516309bde33960e01b815260040160405180910390fd5b60006007546008546104fa9190610c1a565b6001600160a01b0388166000908152600a602052604081205491925090670de0b6b3a764000061052a8985610c54565b6105349190610c32565b61053e9190610c73565b90508061055e57604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b0388166000908152600a602052604081208054839290610586908490610c1a565b92505081905550806007600082825461059f9190610c1a565b9250508190555080600860008282546105b89190610c73565b909155506105c8905088826108fb565b604080516001600160a01b038a168152602081018990529081018290527f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060600160405180910390a15050505050505050565b600061062860016109a0565b90508015610640576000805461ff0019166101001790555b61064c8585858561069a565b8015610693576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050505050565b60006106a660016109a0565b905080156106be576000805461ff0019166101001790555b6004849055600580546001600160a01b038086166001600160a01b0319928316179092556006805492851692909116919091179055841561071357600285905561070b62093a8042610c1a565b60035561064c565b6000196003558015610693576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161068a565b60095460ff16801561076d5750600154155b1561081b576008546001600160a01b0382166000908152600b6020526040812054909161079991610c32565b9050806107b95760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600b60205260408120556107dc82826108fb565b604080516001600160a01b0384168152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649101610424565b60405163209a769d60e11b815260040160405180910390fd5b6005546001600160a01b0316331461085f57604051636570ecab60e11b815260040160405180910390fd5b60095460ff1615610883576040516303cb96db60e21b815260040160405180910390fd5b600354421115610894576002546001555b60006002556000196003556009805460ff19166001908117909155546040519081527f8cc3ea135c140cdc9c28693bb03e998a948f173985729d3d19aea2b7975797d39060200160405180910390a1565b6000826108f28584610a2d565b14949350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610948576040519150601f19603f3d011682016040523d82523d6000602084013e61094d565b606091505b505090508061099b5760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b60448201526064015b60405180910390fd5b505050565b60008054610100900460ff16156109e7578160ff1660011480156109c35750303b155b6109df5760405162461bcd60e51b815260040161099290610bcc565b506000919050565b60005460ff808416911610610a0e5760405162461bcd60e51b815260040161099290610bcc565b506000805460ff191660ff92909216919091179055600190565b919050565b600081815b8451811015610a99576000858281518110610a4f57610a4f610cbb565b60200260200101519050808311610a755760008381526020829052604090209250610a86565b600081815260208490526040902092505b5080610a9181610c8a565b915050610a32565b509392505050565b80356001600160a01b0381168114610a2857600080fd5b600060208284031215610aca57600080fd5b610ad382610aa1565b9392505050565b60008060008060608587031215610af057600080fd5b610af985610aa1565b935060208501359250604085013567ffffffffffffffff80821115610b1d57600080fd5b818701915087601f830112610b3157600080fd5b813581811115610b4057600080fd5b8860208260051b8501011115610b5557600080fd5b95989497505060200194505050565b60008060408385031215610b7757600080fd5b50508035926020909101359150565b60008060008060808587031215610b9c57600080fd5b8435935060208501359250610bb360408601610aa1565b9150610bc160608601610aa1565b905092959194509250565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115610c2d57610c2d610ca5565b500190565b600082610c4f57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610c6e57610c6e610ca5565b500290565b600082821015610c8557610c85610ca5565b500390565b6000600019821415610c9e57610c9e610ca5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea264697066735822122002eaa67adc097fc6071e12aaf5a9e4fc27c606c514971f3e38837ce8dada4c1064736f6c63430008060033";

type EthCampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthCampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthCampaign__factory extends ContractFactory {
  constructor(...args: EthCampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EthCampaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthCampaign> {
    return super.deploy(overrides || {}) as Promise<EthCampaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EthCampaign {
    return super.attach(address) as EthCampaign;
  }
  connect(signer: Signer): EthCampaign__factory {
    return super.connect(signer) as EthCampaign__factory;
  }
  static readonly contractName: "EthCampaign";
  public readonly contractName: "EthCampaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthCampaignInterface {
    return new utils.Interface(_abi) as EthCampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthCampaign {
    return new Contract(address, _abi, signerOrProvider) as EthCampaign;
  }
}
