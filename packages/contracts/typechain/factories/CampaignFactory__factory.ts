/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CampaignFactory,
  CampaignFactoryInterface,
} from "../CampaignFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_masterErc20",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_masterEth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newCampaign",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "Erc20CampaignCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newCampaign",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "EthCampaignCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "master",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "campaignAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "createErc20Campaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "createEthCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "erc20CampaignAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "ethCampaignAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161066938038061066983398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b6105ab806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631cea85c21461005c57806334a065091461008b578063873460441461009e578063be9b43ff146100b3578063fa6cb749146100c6575b600080fd5b61006f61006a366004610474565b6100d9565b6040516001600160a01b03909116815260200160405180910390f35b61006f610099366004610474565b6100f8565b6100b16100ac36600461048d565b61010f565b005b6100b16100c13660046104eb565b610215565b61006f6100d4366004610448565b61032b565b6001546000906100f2906001600160a01b03168361032b565b92915050565b600080546100f2906001600160a01b03168361032b565b600154600090610128906001600160a01b03168361033e565b604051634009634160e01b815260048101899052602481018790526001600160a01b038681166044830152858116606483015291925090821690634009634190608401600060405180830381600087803b15801561018557600080fd5b505af1158015610199573d6000803e3d6000fd5b5050604080513381526001600160a01b0385811660208301528183018c9052606082018b9052608082018a905288811660a0830152871660c082015260e0810186905290517f7ed37899a5d13d5f546fda9e8e656994de9b5ca6a6c791ee84d616514fea5fd3935090819003610100019150a150505050505050565b6000805461022c906001600160a01b03168461033e565b6040516329cbe05160e01b8152600481018a9052602481018890526001600160a01b03878116604483015286811660648301528481166084830152919250908216906329cbe0519060a401600060405180830381600087803b15801561029157600080fd5b505af11580156102a5573d6000803e3d6000fd5b5050604080513381526001600160a01b0385811660208301528183018d9052606082018c9052608082018b905289811660a083015288811660c0830152861660e0820152610100810187905290517f15c84711d61b609d0246a3adc5621e9fde6e108e26fee2db1c7149c4e723177e935090819003610120019150a15050505050505050565b600061033783836103e2565b9392505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166100f25760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b6000610337838330604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b6000806040838503121561045b57600080fd5b82356104668161055d565b946020939093013593505050565b60006020828403121561048657600080fd5b5035919050565b60008060008060008060c087890312156104a657600080fd5b86359550602087013594506040870135935060608701356104c68161055d565b925060808701356104d68161055d565b8092505060a087013590509295509295509295565b600080600080600080600060e0888a03121561050657600080fd5b87359650602088013595506040880135945060608801356105268161055d565b935060808801356105368161055d565b925060a0880135915060c088013561054d8161055d565b8091505092959891949750929550565b6001600160a01b038116811461057257600080fd5b5056fea26469706673582212201c245a255e0e6118dc6d7b4d8a86177458f9f41c7ec03a9db5b5ff793f8573fe64736f6c63430008060033";

type CampaignFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignFactory__factory extends ContractFactory {
  constructor(...args: CampaignFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CampaignFactory";
  }

  deploy(
    _masterErc20: string,
    _masterEth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CampaignFactory> {
    return super.deploy(
      _masterErc20,
      _masterEth,
      overrides || {}
    ) as Promise<CampaignFactory>;
  }
  getDeployTransaction(
    _masterErc20: string,
    _masterEth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _masterErc20,
      _masterEth,
      overrides || {}
    );
  }
  attach(address: string): CampaignFactory {
    return super.attach(address) as CampaignFactory;
  }
  connect(signer: Signer): CampaignFactory__factory {
    return super.connect(signer) as CampaignFactory__factory;
  }
  static readonly contractName: "CampaignFactory";
  public readonly contractName: "CampaignFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignFactoryInterface {
    return new utils.Interface(_abi) as CampaignFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CampaignFactory {
    return new Contract(address, _abi, signerOrProvider) as CampaignFactory;
  }
}
