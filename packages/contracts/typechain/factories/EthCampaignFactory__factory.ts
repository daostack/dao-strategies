/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EthCampaignFactory,
  EthCampaignFactoryInterface,
} from "../EthCampaignFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_master",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newCampaign",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_sharesRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "CampaignCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "campaignAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "createCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161045238038061045283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6103bf806100936000396000f3fe60806040526004361061002d5760003560e01c80636e1a1fac14610039578063c99c19f71461007557600080fd5b3661003457005b600080fd5b34801561004557600080fd5b506100596100543660046102fe565b610097565b6040516001600160a01b03909116815260200160405180910390f35b34801561008157600080fd5b50610095610090366004610317565b6100b4565b005b600080546100ae906001600160a01b0316836101d1565b92915050565b600080546100cb906001600160a01b03168361023e565b604051630580d26160e51b8152600481018a9052602481018990526001600160a01b0388811660448301528781166064830152861515608483015260a482018690529192509082169063b01a4c209060c401600060405180830381600087803b15801561013757600080fd5b505af115801561014b573d6000803e3d6000fd5b5050604080513381526001600160a01b0385811660208301528183018d9052606082018c90528a81166080830152891660a082015287151560c082015260e08101879052610100810186905290517f9508f1a2f1ca6d156e27c057e17bbb9fb6dc248e6aa0f031b8db83c6f88db4c5935090819003610120019150a15050505050505050565b6000610237838330604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b0381166100ae5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b80356001600160a01b03811681146102f957600080fd5b919050565b60006020828403121561031057600080fd5b5035919050565b600080600080600080600060e0888a03121561033257600080fd5b8735965060208801359550610349604089016102e2565b9450610357606089016102e2565b93506080880135801515811461036c57600080fd5b9699959850939692959460a0840135945060c0909301359291505056fea2646970667358221220bb73e701262eede4d3338f5b802c863f6adffd8cf6163d5b4ce7a117a15b46a364736f6c63430008060033";

type EthCampaignFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthCampaignFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EthCampaignFactory__factory extends ContractFactory {
  constructor(...args: EthCampaignFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EthCampaignFactory";
  }

  deploy(
    _master: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EthCampaignFactory> {
    return super.deploy(
      _master,
      overrides || {}
    ) as Promise<EthCampaignFactory>;
  }
  getDeployTransaction(
    _master: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_master, overrides || {});
  }
  attach(address: string): EthCampaignFactory {
    return super.attach(address) as EthCampaignFactory;
  }
  connect(signer: Signer): EthCampaignFactory__factory {
    return super.connect(signer) as EthCampaignFactory__factory;
  }
  static readonly contractName: "EthCampaignFactory";
  public readonly contractName: "EthCampaignFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthCampaignFactoryInterface {
    return new utils.Interface(_abi) as EthCampaignFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EthCampaignFactory {
    return new Contract(address, _abi, signerOrProvider) as EthCampaignFactory;
  }
}
