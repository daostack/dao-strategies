/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Erc20Campaign, Erc20CampaignInterface } from "../Erc20Campaign";

const _abi = [
  {
    inputs: [],
    name: "ActiveChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyInChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ValueIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CHALLENGE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initErc20Campaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lock",
        type: "bool",
      },
    ],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferValueIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506111eb806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063750142e6116100ad578063c884ef8311610071578063c884ef8314610249578063cf30901214610269578063d3f3235714610286578063d54ad2a114610299578063f7c618c1146102a257600080fd5b8063750142e6146102015780637d1881381461020a5780637dc0d1d01461021d57806385e3f99714610230578063c3a079ed1461023f57600080fd5b8063414f33dd116100f4578063414f33dd14610194578063452a9320146101a7578063619d5194146101d257806368742da6146101e5578063717f9092146101f857600080fd5b80630787bc271461012657806317b9d05e1461015957806329cbe0511461016e5780633d13f87414610181575b600080fd5b610146610134366004610dec565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b61016c610167366004610ecf565b6102b5565b005b61016c61017c366004610f3b565b61038a565b61016c61018f366004610e09565b6103bc565b61016c6101a2366004610ef1565b6105a8565b6005546101ba906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b61016c6101e0366004610e95565b610675565b61016c6101f3366004610dec565b6106b3565b61014660045481565b61014660085481565b61016c610218366004610fbb565b61078f565b6006546101ba906001600160a01b031681565b610146670de0b6b3a764000081565b61014662093a8081565b610146610257366004610dec565b600a6020526000908152604090205481565b6009546102769060ff1681565b6040519015158152602001610150565b61016c610294366004610f9a565b610821565b61014660075481565b600c546101ba906001600160a01b031681565b6006546001600160a01b031633146102e0576040516380fee10560e01b815260040160405180910390fd5b60095460ff1615610304576040516303cb96db60e21b815260040160405180910390fd5b60035442101561032757604051633420251360e11b815260040160405180910390fd5b6002805460015582905561033e62093a8042611099565b60038190556040805184815260208101849052908101919091527ff538af40d5ad77456cbcd96a5be317d724e66e0e08eb217c14812308bd43d35e906060015b60405180910390a15050565b610396858585856105a8565b600c80546001600160a01b0319166001600160a01b039290921691909117905550505050565b600060035442116103cf576001546103d3565b6002545b6040516bffffffffffffffffffffffff19606088901b166020820152603481018690529091506000906054016040516020818303038152906040528051906020012090506104578484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508692508591506109bb9050565b610474576040516309bde33960e01b815260040160405180910390fd5b60006007546008546104869190611099565b6001600160a01b0388166000908152600a602052604081205491925090670de0b6b3a76400006104b689856110d3565b6104c091906110b1565b6104ca91906110f2565b9050806104ea57604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b0388166000908152600a602052604081208054839290610512908490611099565b92505081905550806007600082825461052b9190611099565b92505081905550806008600082825461054491906110f2565b90915550610554905088826109d3565b604080516001600160a01b038a168152602081018990529081018290527f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060600160405180910390a15050505050505050565b60006105b460016109ee565b905080156105cc576000805461ff0019166101001790555b6004849055600580546001600160a01b038086166001600160a01b0319928316179092556006805492851692909116919091179055841561062157600285905561061962093a8042611099565b600355610628565b6000196003555b801561066e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6005546001600160a01b031633146106a057604051636570ecab60e11b815260040160405180910390fd5b6009805460ff1916911515919091179055565b60095460ff1680156106c55750600154155b15610773576008546001600160a01b0382166000908152600b602052604081205490916106f1916110b1565b9050806107115760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600b602052604081205561073482826109d3565b604080516001600160a01b0384168152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910161037e565b60405163209a769d60e11b815260040160405180910390fd5b50565b336000908152600b6020526040812080548392906107ae908490611099565b9250508190555080600860008282546107c79190611099565b9091555050600c546107e4906001600160a01b0316333084610a7f565b60408051338152602081018390527fa8044513073c23047a922f0bf7142f18c341a73184b9f8055349b4415fb9d6ca91015b60405180910390a150565b6005546001600160a01b0316331461084c57604051636570ecab60e11b815260040160405180910390fd5b60095460ff1615610870576040516303cb96db60e21b815260040160405180910390fd5b60025415801590610882575060035442115b156108a057604051631b69dd1760e21b815260040160405180910390fd5b600060025560001960035560018160028111156108bf576108bf611166565b141561091b57604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b1580156108fe57600080fd5b505af1158015610912573d6000803e3d6000fd5b5050505061098c565b600281600281111561092f5761092f611166565b141561098c57604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b15801561096e57600080fd5b505af1158015610982573d6000803e3d6000fd5b5050600060015550505b7f0b700a39eebc9d322d0a5829d3d6447d9e000f73a89a7baa6a0fa28a5ec9c8d0816040516108169190610ff0565b6000826109c88584610af0565b1490505b9392505050565b600c546109ea906001600160a01b03168383610b64565b5050565b60008054610100900460ff1615610a3e578160ff166001148015610a115750303b155b610a365760405162461bcd60e51b8152600401610a2d9061104b565b60405180910390fd5b506000919050565b60005460ff808416911610610a655760405162461bcd60e51b8152600401610a2d9061104b565b506000805460ff191660ff92909216919091179055600190565b6040516001600160a01b0380851660248301528316604482015260648101829052610aea9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b99565b50505050565b600081815b8451811015610b5c576000858281518110610b1257610b1261117c565b60200260200101519050808311610b385760008381526020829052604090209250610b49565b600081815260208490526040902092505b5080610b5481611135565b915050610af5565b509392505050565b6040516001600160a01b038316602482015260448101829052610b9490849063a9059cbb60e01b90606401610ab3565b505050565b6000610bee826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c6b9092919063ffffffff16565b805190915015610b945780806020019051810190610c0c9190610eb2565b610b945760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a2d565b6060610c7a8484600085610c82565b949350505050565b606082471015610ce35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a2d565b6001600160a01b0385163b610d3a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a2d565b600080866001600160a01b03168587604051610d569190610fd4565b60006040518083038185875af1925050503d8060008114610d93576040519150601f19603f3d011682016040523d82523d6000602084013e610d98565b606091505b5091509150610da8828286610db3565b979650505050505050565b60608315610dc25750816109cc565b825115610dd25782518084602001fd5b8160405162461bcd60e51b8152600401610a2d9190611018565b600060208284031215610dfe57600080fd5b81356109cc81611192565b60008060008060608587031215610e1f57600080fd5b8435610e2a81611192565b935060208501359250604085013567ffffffffffffffff80821115610e4e57600080fd5b818701915087601f830112610e6257600080fd5b813581811115610e7157600080fd5b8860208260051b8501011115610e8657600080fd5b95989497505060200194505050565b600060208284031215610ea757600080fd5b81356109cc816111a7565b600060208284031215610ec457600080fd5b81516109cc816111a7565b60008060408385031215610ee257600080fd5b50508035926020909101359150565b60008060008060808587031215610f0757600080fd5b84359350602085013592506040850135610f2081611192565b91506060850135610f3081611192565b939692955090935050565b600080600080600060a08688031215610f5357600080fd5b85359450602086013593506040860135610f6c81611192565b92506060860135610f7c81611192565b91506080860135610f8c81611192565b809150509295509295909350565b600060208284031215610fac57600080fd5b8135600381106109cc57600080fd5b600060208284031215610fcd57600080fd5b5035919050565b60008251610fe6818460208701611109565b9190910192915050565b602081016003831061101257634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260008251806020840152611037816040850160208701611109565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082198211156110ac576110ac611150565b500190565b6000826110ce57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156110ed576110ed611150565b500290565b60008282101561110457611104611150565b500390565b60005b8381101561112457818101518382015260200161110c565b83811115610aea5750506000910152565b600060001982141561114957611149611150565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461078c57600080fd5b801515811461078c57600080fdfea264697066735822122034c9063008a3282afa13cbf10f54894fb01a865b5484312cc0e5f0ee72df10d364736f6c63430008060033";

type Erc20CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Erc20CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Erc20Campaign__factory extends ContractFactory {
  constructor(...args: Erc20CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Erc20Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Erc20Campaign> {
    return super.deploy(overrides || {}) as Promise<Erc20Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Erc20Campaign {
    return super.attach(address) as Erc20Campaign;
  }
  connect(signer: Signer): Erc20Campaign__factory {
    return super.connect(signer) as Erc20Campaign__factory;
  }
  static readonly contractName: "Erc20Campaign";
  public readonly contractName: "Erc20Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Erc20CampaignInterface {
    return new utils.Interface(_abi) as Erc20CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc20Campaign {
    return new Contract(address, _abi, signerOrProvider) as Erc20Campaign;
  }
}
