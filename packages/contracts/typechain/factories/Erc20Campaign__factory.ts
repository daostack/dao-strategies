/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Erc20Campaign, Erc20CampaignInterface } from "../Erc20Campaign";

const _abi = [
  {
    inputs: [],
    name: "ActiveChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyInChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ValueIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CHALLENGE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initErc20Campaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lock",
        type: "bool",
      },
    ],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferValueIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611234806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637dc0d1d0116100b8578063c884ef831161007c578063c884ef831461027c578063cf3090121461029c578063d3f32357146102b9578063d54ad2a1146102cc578063da4493f6146102d5578063f7c618c1146102de57600080fd5b80637dc0d1d01461023e57806385e3f997146102515780639637f47514610260578063a9ec3a1b14610269578063c3a079ed1461027257600080fd5b8063452a93201161010a578063452a9320146101c8578063619d5194146101f357806368742da614610206578063717f909214610219578063750142e6146102225780637d1881381461022b57600080fd5b80630787bc271461014757806317b9d05e1461017a57806329cbe0511461018f5780633d13f874146101a2578063414f33dd146101b5575b600080fd5b610167610155366004610e35565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b61018d610188366004610f18565b6102f1565b005b61018d61019d366004610f84565b6103d3565b61018d6101b0366004610e52565b610405565b61018d6101c3366004610f3a565b6105f1565b6005546101db906001600160a01b031681565b6040516001600160a01b039091168152602001610171565b61018d610201366004610ede565b6106be565b61018d610214366004610e35565b6106fc565b61016760045481565b61016760085481565b61018d610239366004611004565b6107d8565b6006546101db906001600160a01b031681565b610167670de0b6b3a764000081565b61016760025481565b61016760015481565b61016762093a8081565b61016761028a366004610e35565b600a6020526000908152604090205481565b6009546102a99060ff1681565b6040519015158152602001610171565b61018d6102c7366004610fe3565b61086a565b61016760075481565b61016760035481565b600c546101db906001600160a01b031681565b6006546001600160a01b0316331461031c576040516380fee10560e01b815260040160405180910390fd5b60095460ff1615610340576040516303cb96db60e21b815260040160405180910390fd5b60025415801590610352575060035442105b1561037057604051633420251360e11b815260040160405180910390fd5b6002805460015582905561038762093a80426110e2565b60038190556040805184815260208101849052908101919091527ff538af40d5ad77456cbcd96a5be317d724e66e0e08eb217c14812308bd43d35e906060015b60405180910390a15050565b6103df858585856105f1565b600c80546001600160a01b0319166001600160a01b039290921691909117905550505050565b600060035442116104185760015461041c565b6002545b6040516bffffffffffffffffffffffff19606088901b166020820152603481018690529091506000906054016040516020818303038152906040528051906020012090506104a0848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250859150610a049050565b6104bd576040516309bde33960e01b815260040160405180910390fd5b60006007546008546104cf91906110e2565b6001600160a01b0388166000908152600a602052604081205491925090670de0b6b3a76400006104ff898561111c565b61050991906110fa565b610513919061113b565b90508061053357604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b0388166000908152600a60205260408120805483929061055b9084906110e2565b92505081905550806007600082825461057491906110e2565b92505081905550806008600082825461058d919061113b565b9091555061059d90508882610a1c565b604080516001600160a01b038a168152602081018990529081018290527f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf79060600160405180910390a15050505050505050565b60006105fd6001610a37565b90508015610615576000805461ff0019166101001790555b6004849055600580546001600160a01b038086166001600160a01b0319928316179092556006805492851692909116919091179055841561066a57600285905561066262093a80426110e2565b600355610671565b6000196003555b80156106b7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6005546001600160a01b031633146106e957604051636570ecab60e11b815260040160405180910390fd5b6009805460ff1916911515919091179055565b60095460ff16801561070e5750600154155b156107bc576008546001600160a01b0382166000908152600b6020526040812054909161073a916110fa565b90508061075a5760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600b602052604081205561077d8282610a1c565b604080516001600160a01b0384168152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491016103c7565b60405163209a769d60e11b815260040160405180910390fd5b50565b336000908152600b6020526040812080548392906107f79084906110e2565b92505081905550806008600082825461081091906110e2565b9091555050600c5461082d906001600160a01b0316333084610ac8565b60408051338152602081018390527fa8044513073c23047a922f0bf7142f18c341a73184b9f8055349b4415fb9d6ca91015b60405180910390a150565b6005546001600160a01b0316331461089557604051636570ecab60e11b815260040160405180910390fd5b60095460ff16156108b9576040516303cb96db60e21b815260040160405180910390fd5b600254158015906108cb575060035442115b156108e957604051631b69dd1760e21b815260040160405180910390fd5b60006002556000196003556001816002811115610908576109086111af565b141561096457604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b15801561094757600080fd5b505af115801561095b573d6000803e3d6000fd5b505050506109d5565b6002816002811115610978576109786111af565b14156109d557604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b1580156109b757600080fd5b505af11580156109cb573d6000803e3d6000fd5b5050600060015550505b7f0b700a39eebc9d322d0a5829d3d6447d9e000f73a89a7baa6a0fa28a5ec9c8d08160405161085f9190611039565b600082610a118584610b39565b1490505b9392505050565b600c54610a33906001600160a01b03168383610bad565b5050565b60008054610100900460ff1615610a87578160ff166001148015610a5a5750303b155b610a7f5760405162461bcd60e51b8152600401610a7690611094565b60405180910390fd5b506000919050565b60005460ff808416911610610aae5760405162461bcd60e51b8152600401610a7690611094565b506000805460ff191660ff92909216919091179055600190565b6040516001600160a01b0380851660248301528316604482015260648101829052610b339085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610be2565b50505050565b600081815b8451811015610ba5576000858281518110610b5b57610b5b6111c5565b60200260200101519050808311610b815760008381526020829052604090209250610b92565b600081815260208490526040902092505b5080610b9d8161117e565b915050610b3e565b509392505050565b6040516001600160a01b038316602482015260448101829052610bdd90849063a9059cbb60e01b90606401610afc565b505050565b6000610c37826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610cb49092919063ffffffff16565b805190915015610bdd5780806020019051810190610c559190610efb565b610bdd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a76565b6060610cc38484600085610ccb565b949350505050565b606082471015610d2c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a76565b6001600160a01b0385163b610d835760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a76565b600080866001600160a01b03168587604051610d9f919061101d565b60006040518083038185875af1925050503d8060008114610ddc576040519150601f19603f3d011682016040523d82523d6000602084013e610de1565b606091505b5091509150610df1828286610dfc565b979650505050505050565b60608315610e0b575081610a15565b825115610e1b5782518084602001fd5b8160405162461bcd60e51b8152600401610a769190611061565b600060208284031215610e4757600080fd5b8135610a15816111db565b60008060008060608587031215610e6857600080fd5b8435610e73816111db565b935060208501359250604085013567ffffffffffffffff80821115610e9757600080fd5b818701915087601f830112610eab57600080fd5b813581811115610eba57600080fd5b8860208260051b8501011115610ecf57600080fd5b95989497505060200194505050565b600060208284031215610ef057600080fd5b8135610a15816111f0565b600060208284031215610f0d57600080fd5b8151610a15816111f0565b60008060408385031215610f2b57600080fd5b50508035926020909101359150565b60008060008060808587031215610f5057600080fd5b84359350602085013592506040850135610f69816111db565b91506060850135610f79816111db565b939692955090935050565b600080600080600060a08688031215610f9c57600080fd5b85359450602086013593506040860135610fb5816111db565b92506060860135610fc5816111db565b91506080860135610fd5816111db565b809150509295509295909350565b600060208284031215610ff557600080fd5b813560038110610a1557600080fd5b60006020828403121561101657600080fd5b5035919050565b6000825161102f818460208701611152565b9190910192915050565b602081016003831061105b57634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260008251806020840152611080816040850160208701611152565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082198211156110f5576110f5611199565b500190565b60008261111757634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561113657611136611199565b500290565b60008282101561114d5761114d611199565b500390565b60005b8381101561116d578181015183820152602001611155565b83811115610b335750506000910152565b600060001982141561119257611192611199565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146107d557600080fd5b80151581146107d557600080fdfea26469706673582212209b6dcac65565571e606ca74249356151a2befab29a6b8b3bf1a2e46535af067764736f6c63430008060033";

type Erc20CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Erc20CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Erc20Campaign__factory extends ContractFactory {
  constructor(...args: Erc20CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Erc20Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Erc20Campaign> {
    return super.deploy(overrides || {}) as Promise<Erc20Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Erc20Campaign {
    return super.attach(address) as Erc20Campaign;
  }
  connect(signer: Signer): Erc20Campaign__factory {
    return super.connect(signer) as Erc20Campaign__factory;
  }
  static readonly contractName: "Erc20Campaign";
  public readonly contractName: "Erc20Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Erc20CampaignInterface {
    return new utils.Interface(_abi) as Erc20CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc20Campaign {
    return new Contract(address, _abi, signerOrProvider) as Erc20Campaign;
  }
}
