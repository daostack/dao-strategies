/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Erc20Campaign, Erc20CampaignInterface } from "../Erc20Campaign";

const _abi = [
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDuringEvaluationPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SharesAlreadyPublished",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "campaignCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPeriodStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "funds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initErc20Campaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "publishShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPublished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferValueIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f25806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637d188138116100ad578063d54ad2a111610071578063d54ad2a11461026e578063e2ae93fb14610277578063eac989f814610297578063edcadc62146102a0578063f7c618c1146102a957600080fd5b80637d1881381461020d5780637dc0d1d014610220578063980e784414610233578063b01a4c201461023b578063c884ef831461024e57600080fd5b8063452a9320116100f4578063452a9320146101b057806358c13b7e146101db57806363a5b88d146101e457806368742da6146101f1578063750142e61461020457600080fd5b806305462a2a146101315780632e2da9bf146101465780633a98ef391461016d5780633d13f8741461018a578063441a7ca11461019d575b600080fd5b61014461013f366004610c51565b6102bc565b005b60085461015890610100900460ff1681565b60405190151581526020015b60405180910390f35b61017c670de0b6b3a764000081565b604051908152602001610164565b610144610198366004610ba8565b610324565b6101446101ab366004610cd1565b6104d1565b6003546101c3906001600160a01b031681565b6040516001600160a01b039091168152602001610164565b61017c60055481565b6008546101589060ff1681565b6101446101ff366004610b8b565b610507565b61017c60075481565b61014461021b366004610c51565b61058a565b6004546101c3906001600160a01b031681565b6101446105e2565b610144610249366004610c6a565b61063f565b61017c61025c366004610b8b565b60096020526000908152604090205481565b61017c60065481565b61017c610285366004610b8b565b600a6020526000908152604090205481565b61017c60025481565b61017c60015481565b600b546101c3906001600160a01b031681565b6004546001600160a01b031633146102e7576040516380fee10560e01b815260040160405180910390fd5b600854610100900460ff16156103105760405163e2c7026360e01b815260040160405180910390fd5b6008805461ff001916610100179055600155565b61032c610705565b61034957604051638ebaa35d60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506103cb838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506001549150849050610733565b6103e8576040516309bde33960e01b815260040160405180910390fd5b60006006546007546103fa9190610de9565b6001600160a01b03871660009081526009602052604081205491925090670de0b6b3a764000061042a8885610e23565b6104349190610e01565b61043e9190610e42565b90508061045e57604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b03871660009081526009602052604081208054839290610486908490610de9565b92505081905550806006600082825461049f9190610de9565b9250508190555080600760008282546104b89190610e42565b909155506104c89050878261074b565b50505050505050565b6104df87878787878761063f565b600b80546001600160a01b0319166001600160a01b0392909216919091179055505050505050565b61050f610762565b61052c5760405163209a769d60e11b815260040160405180910390fd5b6001600160a01b0381166000908152600a6020526040902054806105635760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600a6020526040812055610586828261074b565b5050565b336000908152600a6020526040812080548392906105a9908490610de9565b9250508190555080600760008282546105c29190610de9565b9091555050600b546105df906001600160a01b031633308461078d565b50565b6003546001600160a01b0316331461060d57604051636570ecab60e11b815260040160405180910390fd5b6005544211156106305760405163148cb5d760e01b815260040160405180910390fd5b6008805460ff19166001179055565b600061064b60016107fe565b90508015610663576000805461ff0019166101001790555b60018790556002869055600380546001600160a01b038088166001600160a01b0319928316179092556004805492871692909116919091179055600880548415156101000261ff0019909116179055600582905580156104c8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050505050565b60006005544211801561071f5750600854610100900460ff165b801561072e575060085460ff16155b905090565b600082610740858461088f565b1490505b9392505050565b600b54610586906001600160a01b03168383610903565b60085460009060ff168061072e57506005544211801561072e575050600854610100900460ff161590565b6040516001600160a01b03808516602483015283166044820152606481018290526107f89085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610938565b50505050565b60008054610100900460ff161561084e578160ff1660011480156108215750303b155b6108465760405162461bcd60e51b815260040161083d90610d9b565b60405180910390fd5b506000919050565b60005460ff8084169116106108755760405162461bcd60e51b815260040161083d90610d9b565b506000805460ff191660ff92909216919091179055600190565b600081815b84518110156108fb5760008582815181106108b1576108b1610eb6565b602002602001015190508083116108d757600083815260208290526040902092506108e8565b600081815260208490526040902092505b50806108f381610e85565b915050610894565b509392505050565b6040516001600160a01b03831660248201526044810182905261093390849063a9059cbb60e01b906064016107c1565b505050565b600061098d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a0a9092919063ffffffff16565b80519091501561093357808060200190518101906109ab9190610c34565b6109335760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161083d565b6060610a198484600085610a21565b949350505050565b606082471015610a825760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161083d565b6001600160a01b0385163b610ad95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161083d565b600080866001600160a01b03168587604051610af59190610d4c565b60006040518083038185875af1925050503d8060008114610b32576040519150601f19603f3d011682016040523d82523d6000602084013e610b37565b606091505b5091509150610b47828286610b52565b979650505050505050565b60608315610b61575081610744565b825115610b715782518084602001fd5b8160405162461bcd60e51b815260040161083d9190610d68565b600060208284031215610b9d57600080fd5b813561074481610ecc565b60008060008060608587031215610bbe57600080fd5b8435610bc981610ecc565b935060208501359250604085013567ffffffffffffffff80821115610bed57600080fd5b818701915087601f830112610c0157600080fd5b813581811115610c1057600080fd5b8860208260051b8501011115610c2557600080fd5b95989497505060200194505050565b600060208284031215610c4657600080fd5b815161074481610ee1565b600060208284031215610c6357600080fd5b5035919050565b60008060008060008060c08789031215610c8357600080fd5b86359550602087013594506040870135610c9c81610ecc565b93506060870135610cac81610ecc565b92506080870135610cbc81610ee1565b8092505060a087013590509295509295509295565b600080600080600080600060e0888a031215610cec57600080fd5b87359650602088013595506040880135610d0581610ecc565b94506060880135610d1581610ecc565b93506080880135610d2581610ee1565b925060a0880135915060c0880135610d3c81610ecc565b8091505092959891949750929550565b60008251610d5e818460208701610e59565b9190910192915050565b6020815260008251806020840152610d87816040850160208701610e59565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115610dfc57610dfc610ea0565b500190565b600082610e1e57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e3d57610e3d610ea0565b500290565b600082821015610e5457610e54610ea0565b500390565b60005b83811015610e74578181015183820152602001610e5c565b838111156107f85750506000910152565b6000600019821415610e9957610e99610ea0565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146105df57600080fd5b80151581146105df57600080fdfea2646970667358221220505aef74795f54cbf7ab356c37b76b5f91141499c89bf42ed9401fcb14907b2964736f6c63430008060033";

type Erc20CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Erc20CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Erc20Campaign__factory extends ContractFactory {
  constructor(...args: Erc20CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Erc20Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Erc20Campaign> {
    return super.deploy(overrides || {}) as Promise<Erc20Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Erc20Campaign {
    return super.attach(address) as Erc20Campaign;
  }
  connect(signer: Signer): Erc20Campaign__factory {
    return super.connect(signer) as Erc20Campaign__factory;
  }
  static readonly contractName: "Erc20Campaign";
  public readonly contractName: "Erc20Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Erc20CampaignInterface {
    return new utils.Interface(_abi) as Erc20CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc20Campaign {
    return new Contract(address, _abi, signerOrProvider) as Erc20Campaign;
  }
}
