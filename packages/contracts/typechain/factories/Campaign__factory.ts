/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalShares",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "sharesMerkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Campaign.SharesData",
        name: "_shares",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_evaluationPeriodEnd",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDuringEvaluationPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SharesAlreadyPublished",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "campaignCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evaluationPeriodEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "funds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalShares",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "sharesMerkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Campaign.SharesData",
        name: "_shares",
        type: "tuple",
      },
    ],
    name: "publishShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "totalShares",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPublished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b1a380380610b1a83398101604081905261002f916100bb565b8551600055602090950151600155600293909355600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055600780549115156101000261ff001990921691909117905560055561016a565b80516001600160a01b03811681146100a657600080fd5b919050565b805180151581146100a657600080fd5b60008060008060008086880360e08112156100d557600080fd5b60408112156100e357600080fd5b50604080519081016001600160401b038111828210171561011457634e487b7160e01b600052604160045260246000fd5b6040908152885182526020808a015190830152880151909650945061013b6060880161008f565b93506101496080880161008f565b925061015760a088016100ab565b915060c087015190509295509295509295565b6109a1806101796000396000f3fe6080604052600436106100e15760003560e01c80637dc0d1d01161007f578063c884ef8311610059578063c884ef8314610282578063d54ad2a1146102af578063e2ae93fb146102c5578063eac989f8146102f257600080fd5b80637dc0d1d014610229578063980e784414610249578063b80dea971461025e57600080fd5b8063440113c0116100bb578063440113c014610197578063452a9320146101b757806363a5b88d146101ef57806368742da61461020957600080fd5b806303314efa146101115780632e2da9bf146101465780633d13f8741461017557600080fd5b3661010c5733600090815260096020526040812080543492906101059084906108b4565b9091555050005b600080fd5b34801561011d57600080fd5b5060005460015461012c919082565b604080519283526020830191909152015b60405180910390f35b34801561015257600080fd5b5060075461016590610100900460ff1681565b604051901515815260200161013d565b34801561018157600080fd5b506101956101903660046107cd565b610308565b005b3480156101a357600080fd5b506101956101b2366004610857565b6104fc565b3480156101c357600080fd5b506003546101d7906001600160a01b031681565b6040516001600160a01b03909116815260200161013d565b3480156101fb57600080fd5b506007546101659060ff1681565b34801561021557600080fd5b506101956102243660046107ab565b61056d565b34801561023557600080fd5b506004546101d7906001600160a01b031681565b34801561025557600080fd5b5061019561064f565b34801561026a57600080fd5b5061027460055481565b60405190815260200161013d565b34801561028e57600080fd5b5061027461029d3660046107ab565b60086020526000908152604090205481565b3480156102bb57600080fd5b5061027460065481565b3480156102d157600080fd5b506102746102e03660046107ab565b60096020526000908152604090205481565b3480156102fe57600080fd5b5061027460025481565b6103106106ac565b61032d57604051638ebaa35d60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506103af8383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506106da565b6103cc576040516309bde33960e01b815260040160405180910390fd5b6000600654476103dc91906108b4565b6001600160a01b0387166000908152600860205260408120548154929350909161040688856108ee565b61041091906108cc565b61041a919061090d565b90508061043a57604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b038716600090815260086020526040812080548392906104629084906108b4565b92505081905550806006600082825461047b91906108b4565b90915550506040516000906001600160a01b0389169083908381818185875af1925050503d80600081146104cb576040519150601f19603f3d011682016040523d82523d6000602084013e6104d0565b606091505b50509050806104f25760405163078ecf4160e41b815260040160405180910390fd5b5050505050505050565b6004546001600160a01b03163314610527576040516380fee10560e01b815260040160405180910390fd5b600754610100900460ff16156105505760405163e2c7026360e01b815260040160405180910390fd5b6007805461ff001916610100179055805160005560200151600155565b6105756106f0565b6105925760405163209a769d60e11b815260040160405180910390fd5b6001600160a01b038116600090815260096020526040902054806105c95760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000818152600960205260408082208290555190919083908381818185875af1925050503d8060008114610623576040519150601f19603f3d011682016040523d82523d6000602084013e610628565b606091505b505090508061064a576040516369a4751b60e01b815260040160405180910390fd5b505050565b6003546001600160a01b0316331461067a57604051636570ecab60e11b815260040160405180910390fd5b60055442111561069d5760405163148cb5d760e01b815260040160405180910390fd5b6007805460ff19166001179055565b6000600554421180156106c65750600754610100900460ff165b80156106d5575060075460ff16155b905090565b6000826106e7858461071b565b14949350505050565b60075460009060ff16806106d55750600554421180156106d5575050600754610100900460ff161590565b600081815b845181101561078757600085828151811061073d5761073d610955565b602002602001015190508083116107635760008381526020829052604090209250610774565b600081815260208490526040902092505b508061077f81610924565b915050610720565b509392505050565b80356001600160a01b03811681146107a657600080fd5b919050565b6000602082840312156107bd57600080fd5b6107c68261078f565b9392505050565b600080600080606085870312156107e357600080fd5b6107ec8561078f565b935060208501359250604085013567ffffffffffffffff8082111561081057600080fd5b818701915087601f83011261082457600080fd5b81358181111561083357600080fd5b8860208260051b850101111561084857600080fd5b95989497505060200194505050565b60006040828403121561086957600080fd5b6040516040810181811067ffffffffffffffff8211171561089a57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600082198211156108c7576108c761093f565b500190565b6000826108e957634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156109085761090861093f565b500290565b60008282101561091f5761091f61093f565b500390565b60006000198214156109385761093861093f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220cf23b88b7069aaeae6098638eb46bd63ccd41f0bfd55ba20e6fc1af9e16e86e664736f6c63430008060033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Campaign";
  }

  deploy(
    _shares: Campaign.SharesDataStruct,
    _uri: BytesLike,
    _guardian: string,
    _oracle: string,
    _sharesPublished: boolean,
    _evaluationPeriodEnd: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Campaign> {
    return super.deploy(
      _shares,
      _uri,
      _guardian,
      _oracle,
      _sharesPublished,
      _evaluationPeriodEnd,
      overrides || {}
    ) as Promise<Campaign>;
  }
  getDeployTransaction(
    _shares: Campaign.SharesDataStruct,
    _uri: BytesLike,
    _guardian: string,
    _oracle: string,
    _sharesPublished: boolean,
    _evaluationPeriodEnd: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _shares,
      _uri,
      _guardian,
      _oracle,
      _sharesPublished,
      _evaluationPeriodEnd,
      overrides || {}
    );
  }
  attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }
  static readonly contractName: "Campaign";
  public readonly contractName: "Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}
