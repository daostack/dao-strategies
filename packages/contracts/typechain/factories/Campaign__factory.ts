/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDuringEvaluationPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SharesAlreadyPublished",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "campaignCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPeriodStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "funds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalShares",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "sharesMerkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Campaign.SharesData",
        name: "_shares",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalShares",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "sharesMerkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct Campaign.SharesData",
        name: "_shares",
        type: "tuple",
      },
    ],
    name: "publishShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "totalShares",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPublished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b78806100206000396000f3fe6080604052600436106100ec5760003560e01c806368742da61161008a578063d2e605c611610059578063d2e605c6146102ba578063d54ad2a1146102da578063e2ae93fb146102f0578063eac989f81461031d57600080fd5b806368742da6146102385780637dc0d1d014610258578063980e784414610278578063c884ef831461028d57600080fd5b8063440113c0116100c6578063440113c0146101a2578063452a9320146101c257806358c13b7e146101fa57806363a5b88d1461021e57600080fd5b806303314efa1461011c5780632e2da9bf146101515780633d13f8741461018057600080fd5b3661011757336000908152600a602052604081208054349290610110908490610a8b565b9091555050005b600080fd5b34801561012857600080fd5b50600154600254610137919082565b604080519283526020830191909152015b60405180910390f35b34801561015d57600080fd5b5060085461017090610100900460ff1681565b6040519015158152602001610148565b34801561018c57600080fd5b506101a061019b366004610975565b610333565b005b3480156101ae57600080fd5b506101a06101bd3660046109ff565b610528565b3480156101ce57600080fd5b506004546101e2906001600160a01b031681565b6040516001600160a01b039091168152602001610148565b34801561020657600080fd5b5061021060065481565b604051908152602001610148565b34801561022a57600080fd5b506008546101709060ff1681565b34801561024457600080fd5b506101a0610253366004610953565b610599565b34801561026457600080fd5b506005546101e2906001600160a01b031681565b34801561028457600080fd5b506101a061067b565b34801561029957600080fd5b506102106102a8366004610953565b60096020526000908152604090205481565b3480156102c657600080fd5b506101a06102d5366004610a1b565b6106d8565b3480156102e657600080fd5b5061021060075481565b3480156102fc57600080fd5b5061021061030b366004610953565b600a6020526000908152604090205481565b34801561032957600080fd5b5061021060035481565b61033b6107f7565b61035857604051638ebaa35d60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b166020820152603481018490526000906054016040516020818303038152906040528051906020012090506103da838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506002549150849050610825565b6103f7576040516309bde33960e01b815260040160405180910390fd5b6000600754476104079190610a8b565b6001600160a01b03871660009081526009602052604081205460015492935090916104328885610ac5565b61043c9190610aa3565b6104469190610ae4565b90508061046657604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b0387166000908152600960205260408120805483929061048e908490610a8b565b9250508190555080600760008282546104a79190610a8b565b90915550506040516000906001600160a01b0389169083908381818185875af1925050503d80600081146104f7576040519150601f19603f3d011682016040523d82523d6000602084013e6104fc565b606091505b505090508061051e5760405163078ecf4160e41b815260040160405180910390fd5b5050505050505050565b6005546001600160a01b03163314610553576040516380fee10560e01b815260040160405180910390fd5b600854610100900460ff161561057c5760405163e2c7026360e01b815260040160405180910390fd5b6008805461ff001916610100179055805160015560200151600255565b6105a161083b565b6105be5760405163209a769d60e11b815260040160405180910390fd5b6001600160a01b0381166000908152600a6020526040902054806105f55760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000818152600a60205260408082208290555190919083908381818185875af1925050503d806000811461064f576040519150601f19603f3d011682016040523d82523d6000602084013e610654565b606091505b5050905080610676576040516369a4751b60e01b815260040160405180910390fd5b505050565b6004546001600160a01b031633146106a657604051636570ecab60e11b815260040160405180910390fd5b6006544211156106c95760405163148cb5d760e01b815260040160405180910390fd5b6008805460ff19166001179055565b600054610100900460ff166106f35760005460ff16156106f7565b303b155b61075e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015610780576000805461ffff19166101011790555b865160015560208701516002556003869055600480546001600160a01b038088166001600160a01b0319928316179092556005805492871692909116919091179055600880548415156101000261ff0019909116179055600682905580156107ee576000805461ff00191690555b50505050505050565b6000600654421180156108115750600854610100900460ff165b8015610820575060085460ff16155b905090565b6000826108328584610866565b14949350505050565b60085460009060ff1680610820575060065442118015610820575050600854610100900460ff161590565b600081815b84518110156108d257600085828151811061088857610888610b2c565b602002602001015190508083116108ae57600083815260208290526040902092506108bf565b600081815260208490526040902092505b50806108ca81610afb565b91505061086b565b509392505050565b80356001600160a01b03811681146108f157600080fd5b919050565b60006040828403121561090857600080fd5b6040516040810181811067ffffffffffffffff8211171561093957634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b60006020828403121561096557600080fd5b61096e826108da565b9392505050565b6000806000806060858703121561098b57600080fd5b610994856108da565b935060208501359250604085013567ffffffffffffffff808211156109b857600080fd5b818701915087601f8301126109cc57600080fd5b8135818111156109db57600080fd5b8860208260051b85010111156109f057600080fd5b95989497505060200194505050565b600060408284031215610a1157600080fd5b61096e83836108f6565b60008060008060008060e08789031215610a3457600080fd5b610a3e88886108f6565b955060408701359450610a53606088016108da565b9350610a61608088016108da565b925060a08701358015158114610a7657600080fd5b8092505060c087013590509295509295509295565b60008219821115610a9e57610a9e610b16565b500190565b600082610ac057634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610adf57610adf610b16565b500290565b600082821015610af657610af6610b16565b500390565b6000600019821415610b0f57610b0f610b16565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea264697066735822122014e95864796d34a082e496999760bcbb5d06693706c3a75be2a261bfe1aaee8264736f6c63430008060033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Campaign> {
    return super.deploy(overrides || {}) as Promise<Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }
  static readonly contractName: "Campaign";
  public readonly contractName: "Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}
