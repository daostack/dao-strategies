/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDuringEvaluationPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SharesAlreadyPublished",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "campaignCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPeriodStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "funds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_uri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_sharesPublished",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_claimPeriodStart",
        type: "uint256",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "publishShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesPublished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ba0806100206000396000f3fe6080604052600436106100f75760003560e01c80637dc0d1d01161008a578063d54ad2a111610059578063d54ad2a1146102d1578063e2ae93fb146102e7578063eac989f814610314578063edcadc621461032a57600080fd5b80637dc0d1d01461024f578063980e78441461026f578063b01a4c2014610284578063c884ef83146102a457600080fd5b8063452a9320116100c6578063452a9320146101c757806358c13b7e146101ff57806363a5b88d1461021557806368742da61461022f57600080fd5b806305462a2a146101275780632e2da9bf146101495780633a98ef391461017d5780633d13f874146101a757600080fd5b3661012257336000908152600960205260408120805434929061011b908490610ab3565b9091555050005b600080fd5b34801561013357600080fd5b506101476101423660046109e4565b610340565b005b34801561015557600080fd5b5060075461016890610100900460ff1681565b60405190151581526020015b60405180910390f35b34801561018957600080fd5b50610199670de0b6b3a764000081565b604051908152602001610174565b3480156101b357600080fd5b506101476101c236600461095a565b6103a8565b3480156101d357600080fd5b506003546101e7906001600160a01b031681565b6040516001600160a01b039091168152602001610174565b34801561020b57600080fd5b5061019960055481565b34801561022157600080fd5b506007546101689060ff1681565b34801561023b57600080fd5b5061014761024a366004610938565b6105a2565b34801561025b57600080fd5b506004546101e7906001600160a01b031681565b34801561027b57600080fd5b50610147610684565b34801561029057600080fd5b5061014761029f3660046109fd565b6106e1565b3480156102b057600080fd5b506101996102bf366004610938565b60086020526000908152604090205481565b3480156102dd57600080fd5b5061019960065481565b3480156102f357600080fd5b50610199610302366004610938565b60096020526000908152604090205481565b34801561032057600080fd5b5061019960025481565b34801561033657600080fd5b5061019960015481565b6004546001600160a01b0316331461036b576040516380fee10560e01b815260040160405180910390fd5b600754610100900460ff16156103945760405163e2c7026360e01b815260040160405180910390fd5b6007805461ff001916610100179055600155565b6103b06107a8565b6103cd57604051638ebaa35d60e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606086901b1660208201526034810184905260009060540160405160208183030381529060405280519060200120905061044f8383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506107d6565b61046c576040516309bde33960e01b815260040160405180910390fd5b60006006544761047c9190610ab3565b6001600160a01b03871660009081526008602052604081205491925090670de0b6b3a76400006104ac8885610aed565b6104b69190610acb565b6104c09190610b0c565b9050806104e057604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b03871660009081526008602052604081208054839290610508908490610ab3565b9250508190555080600660008282546105219190610ab3565b90915550506040516000906001600160a01b0389169083908381818185875af1925050503d8060008114610571576040519150601f19603f3d011682016040523d82523d6000602084013e610576565b606091505b50509050806105985760405163078ecf4160e41b815260040160405180910390fd5b5050505050505050565b6105aa6107ec565b6105c75760405163209a769d60e11b815260040160405180910390fd5b6001600160a01b038116600090815260096020526040902054806105fe5760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000818152600960205260408082208290555190919083908381818185875af1925050503d8060008114610658576040519150601f19603f3d011682016040523d82523d6000602084013e61065d565b606091505b505090508061067f576040516369a4751b60e01b815260040160405180910390fd5b505050565b6003546001600160a01b031633146106af57604051636570ecab60e11b815260040160405180910390fd5b6005544211156106d25760405163148cb5d760e01b815260040160405180910390fd5b6007805460ff19166001179055565b60006106ed6001610817565b90508015610705576000805461ff0019166101001790555b60018790556002869055600380546001600160a01b038088166001600160a01b0319928316179092556004805492871692909116919091179055600780548415156101000261ff00199091161790556005829055801561079f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6000600554421180156107c25750600754610100900460ff165b80156107d1575060075460ff16155b905090565b6000826107e385846108ad565b14949350505050565b60075460009060ff16806107d15750600554421180156107d1575050600754610100900460ff161590565b60008054610100900460ff1615610867578160ff16600114801561083a5750303b155b61085f5760405162461bcd60e51b815260040161085690610a65565b60405180910390fd5b506000919050565b60005460ff80841691161061088e5760405162461bcd60e51b815260040161085690610a65565b506000805460ff191660ff92909216919091179055600190565b919050565b600081815b84518110156109195760008582815181106108cf576108cf610b54565b602002602001015190508083116108f55760008381526020829052604090209250610906565b600081815260208490526040902092505b508061091181610b23565b9150506108b2565b509392505050565b80356001600160a01b03811681146108a857600080fd5b60006020828403121561094a57600080fd5b61095382610921565b9392505050565b6000806000806060858703121561097057600080fd5b61097985610921565b935060208501359250604085013567ffffffffffffffff8082111561099d57600080fd5b818701915087601f8301126109b157600080fd5b8135818111156109c057600080fd5b8860208260051b85010111156109d557600080fd5b95989497505060200194505050565b6000602082840312156109f657600080fd5b5035919050565b60008060008060008060c08789031215610a1657600080fd5b8635955060208701359450610a2d60408801610921565b9350610a3b60608801610921565b925060808701358015158114610a5057600080fd5b8092505060a087013590509295509295509295565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115610ac657610ac6610b3e565b500190565b600082610ae857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610b0757610b07610b3e565b500290565b600082821015610b1e57610b1e610b3e565b500390565b6000600019821415610b3757610b37610b3e565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212204ff3ebd2a32b99a80f5d8c773d8c84a2b9c39024ae273653d39af9897072729464736f6c63430008060033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Campaign> {
    return super.deploy(overrides || {}) as Promise<Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }
  static readonly contractName: "Campaign";
  public readonly contractName: "Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}
