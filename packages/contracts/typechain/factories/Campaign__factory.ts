/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "MerkleRootUpdateNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoAssetsToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyInChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assset",
        type: "address",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Fund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "locked",
        type: "bool",
      },
    ],
    name: "Lock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRootUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CHALLENGE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAYS_IN_WEEK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_IN_DAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "balanceOfAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_activationTime",
        type: "uint256",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isChallengePeriod",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRootUpdateAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "rewardsAvailableToClaimer",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lock",
        type: "bool",
      },
    ],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "totalReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyShares",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "withdrawAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180556117f9806100246000396000f3fe6080604052600436106101c65760003560e01c8063717f9092116100f7578063be8b768611610095578063cf30901211610064578063cf309012146104f1578063d3f323571461050b578063da4493f61461052b578063ef5d9ae81461054157600080fd5b8063be8b76861461047a578063c1d899411461049a578063c24e4778146104ba578063c3a079ed146104da57600080fd5b80637dc0d1d0116100d15780637dc0d1d01461041257806385e3f997146104325780639637f4751461044e578063a9ec3a1b1461046457600080fd5b8063717f9092146103d457806375e07c2d146103ea5780637b1837de146103ff57600080fd5b8063510cbd9c11610164578063619d51941161013e578063619d51941461037357806361a52a361461039357806361ae1544146103aa5780636c4fbc4a146103bf57600080fd5b8063510cbd9c14610319578063574eab011461033e57806360b3710b1461035357600080fd5b806317b9d05e116101a057806317b9d05e1461026957806340bcf74814610289578063452a9320146102c15780634df9cfb3146102f957600080fd5b80630b04b8d7146101de5780630c9cbf0e146101fe578063162dfe001461024957600080fd5b366101d9576101d73460003361056e565b005b600080fd5b3480156101ea57600080fd5b506101d76101f9366004611488565b610619565b34801561020a57600080fd5b50610236610219366004611395565b600960209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561025557600080fd5b506101d761026436600461142e565b61071c565b34801561027557600080fd5b506101d7610284366004611531565b6107cf565b34801561029557600080fd5b506102366102a4366004611395565b600b60209081526000928352604080842090915290825290205481565b3480156102cd57600080fd5b506006546102e1906001600160a01b031681565b6040516001600160a01b039091168152602001610240565b34801561030557600080fd5b5061023661031436600461137a565b6108a3565b34801561032557600080fd5b5061032e6108d5565b6040519015158152602001610240565b34801561034a57600080fd5b5061032e610955565b34801561035f57600080fd5b506101d761036e366004611553565b610981565b34801561037f57600080fd5b506101d761038e3660046114f7565b610a4d565b34801561039f57600080fd5b506102366201518081565b3480156103b657600080fd5b50610236600781565b3480156103cb57600080fd5b5061032e610ac0565b3480156103e057600080fd5b5061023660055481565b3480156103f657600080fd5b50610236610ad2565b6101d761040d3660046113c8565b610aeb565b34801561041e57600080fd5b506007546102e1906001600160a01b031681565b34801561043e57600080fd5b50610236670de0b6b3a764000081565b34801561045a57600080fd5b5061023660035481565b34801561047057600080fd5b5061023660025481565b34801561048657600080fd5b506102366104953660046113f2565b610b79565b3480156104a657600080fd5b506102366104b536600461137a565b610bdc565b3480156104c657600080fd5b506101d76104d5366004611395565b610c70565b3480156104e657600080fd5b5061023662093a8081565b3480156104fd57600080fd5b50600a5461032e9060ff1681565b34801561051757600080fd5b506101d76105263660046115a1565b610d4f565b34801561053757600080fd5b5061023660045481565b34801561054d57600080fd5b5061023661055c36600461137a565b60086020526000908152604090205481565b6001600160a01b038083166000908152600b60209081526040808320938516835292905290812080548592906105a59084906116a0565b90915550506001600160a01b038216156105ce576105ce6001600160a01b038316823086610e50565b604080518481526001600160a01b0384811660208301528316917fa5e8482b3a4fbac393476288e591dd9316d7304a537b26f9b67167f0ce19750f91015b60405180910390a2505050565b6106258585858561071c565b6000610632868684610b79565b90508061065257604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b038083166000908152600960209081526040808320938a16835292905290812080548392906106899084906116a0565b90915550506001600160a01b038216600090815260086020526040812080548392906106b69084906116a0565b909155506106c79050868284610ec1565b60408051868152602081018390526001600160a01b03848116828401529151918816917fb6fe5ce185a3773d47e919f57c7edfd102c91cb7833b2be405c4de89d9980fd79181900360600190a2505050505050565b6000610726610ad2565b6040516bffffffffffffffffffffffff19606088901b166020820152603481018690529091506000906054016040516020818303038152906040528051906020012090506107aa848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250859150610f839050565b6107c7576040516309bde33960e01b815260040160405180910390fd5b505050505050565b6007546001600160a01b031633146107fa576040516380fee10560e01b815260040160405180910390fd5b600a5460ff161561081e576040516303cb96db60e21b815260040160405180910390fd5b6108266108d5565b61084357604051631aeebaf760e11b815260040160405180910390fd5b6003805460025582905561085a62093a80426116a0565b6004819055604080518481526020810184905280820192909252517f93d244ac7b8f4282b061b1dcb3f543f36f06af40a7bfdefe04fc913ef7ea54f99181900360600190a15050565b6001600160a01b0381166000908152600860205260408120546108c583610bdc565b6108cf91906116a0565b92915050565b60006108df610ac0565b1561091c57610916604051806040016040528060118152602001704368616c6c656e676520506572696f642160781b815250610f99565b50600090565b6007620151806004544261093091906116eb565b61093a91906116b8565b6109449190611749565b1561094f5750600090565b50600190565b600a5460009060ff16801561096a5750600254155b80156109765750600354155b156109165750600190565b600061098d6001610fdf565b905080156109a5576000805461ff0019166101001790555b6005859055600680546001600160a01b038087166001600160a01b031992831617909255600780549286169290911691909117905585156109fa5760038690556109f262093a80426116a0565b600455610a00565b60048290555b80156107c7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b6006546001600160a01b03163314610a7857604051636570ecab60e11b815260040160405180910390fd5b600a805460ff19168215159081179091556040519081527f73cb6ff886d89c3816d03270daa43e4789d7c218d9a12960651ff278e1fef1f1906020015b60405180910390a150565b60006004544210156109165750600190565b60006004544211610ae4575060025490565b5060035490565b60026001541415610b435760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556001600160a01b038216610b6657610b6134833361056e565b610b71565b610b7181833361056e565b505060018055565b6001600160a01b038082166000908152600960209081526040808320938716835292905290812054670de0b6b3a764000084610bb4856108a3565b610bbe91906116cc565b610bc891906116b8565b610bd291906116eb565b90505b9392505050565b60006001600160a01b03821615610c69576040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610c2c57600080fd5b505afa158015610c40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6491906115c2565b6108cf565b4792915050565b610c78610955565b15610d36576001600160a01b038082166000908152600b602090815260408083209386168352929052205480610cc157604051635da3252f60e11b815260040160405180910390fd5b6001600160a01b038083166000908152600b60209081526040808320938716835292905290812055610cf4838284610ec1565b604080518281526001600160a01b0384811660208301528516917f56c54ba9bd38d8fd62012e42c7ee564519b09763c426d331b3661b537ead19b2910161060c565b60405163209a769d60e11b815260040160405180910390fd5b6006546001600160a01b03163314610d7a57604051636570ecab60e11b815260040160405180910390fd5b600a5460ff1615610d9e576040516303cb96db60e21b815260040160405180910390fd5b610da6610ac0565b610dc357604051631b69dd1760e21b815260040160405180910390fd5b60006003556001816002811115610ddc57610ddc611789565b1415610df457600a805460ff19166001179055610e21565b6002816002811115610e0857610e08611789565b1415610e2157600a805460ff1916600117905560006002555b7f0b700a39eebc9d322d0a5829d3d6447d9e000f73a89a7baa6a0fa28a5ec9c8d081604051610ab591906115f7565b6040516001600160a01b0380851660248301528316604482015260648101829052610ebb9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261106c565b50505050565b6001600160a01b038116610f6a576000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610f1c576040519150601f19603f3d011682016040523d82523d6000602084013e610f21565b606091505b5050905080610ebb5760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610b3a565b610f7e6001600160a01b038216848461113e565b505050565b600082610f90858461116e565b14949350505050565b610fdc81604051602401610fad919061161f565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526111e2565b50565b60008054610100900460ff1615611026578160ff1660011480156110025750303b155b61101e5760405162461bcd60e51b8152600401610b3a90611652565b506000919050565b60005460ff80841691161061104d5760405162461bcd60e51b8152600401610b3a90611652565b506000805460ff191660ff92909216919091179055600190565b919050565b60006110c1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112039092919063ffffffff16565b805190915015610f7e57808060200190518101906110df9190611514565b610f7e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b3a565b6040516001600160a01b038316602482015260448101829052610f7e90849063a9059cbb60e01b90606401610e84565b600081815b84518110156111da5760008582815181106111905761119061179f565b602002602001015190508083116111b657600083815260208290526040902092506111c7565b600081815260208490526040902092505b50806111d28161172e565b915050611173565b509392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6060610bd28484600085856001600160a01b0385163b6112655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b3a565b600080866001600160a01b0316858760405161128191906115db565b60006040518083038185875af1925050503d80600081146112be576040519150601f19603f3d011682016040523d82523d6000602084013e6112c3565b606091505b50915091506112d38282866112de565b979650505050505050565b606083156112ed575081610bd5565b8251156112fd5782518084602001fd5b8160405162461bcd60e51b8152600401610b3a919061161f565b80356001600160a01b038116811461106757600080fd5b60008083601f84011261134057600080fd5b50813567ffffffffffffffff81111561135857600080fd5b6020830191508360208260051b850101111561137357600080fd5b9250929050565b60006020828403121561138c57600080fd5b610bd582611317565b600080604083850312156113a857600080fd5b6113b183611317565b91506113bf60208401611317565b90509250929050565b600080604083850312156113db57600080fd5b6113e483611317565b946020939093013593505050565b60008060006060848603121561140757600080fd5b61141084611317565b92506020840135915061142560408501611317565b90509250925092565b6000806000806060858703121561144457600080fd5b61144d85611317565b935060208501359250604085013567ffffffffffffffff81111561147057600080fd5b61147c8782880161132e565b95989497509550505050565b6000806000806000608086880312156114a057600080fd5b6114a986611317565b945060208601359350604086013567ffffffffffffffff8111156114cc57600080fd5b6114d88882890161132e565b90945092506114eb905060608701611317565b90509295509295909350565b60006020828403121561150957600080fd5b8135610bd5816117b5565b60006020828403121561152657600080fd5b8151610bd5816117b5565b6000806040838503121561154457600080fd5b50508035926020909101359150565b600080600080600060a0868803121561156b57600080fd5b853594506020860135935061158260408701611317565b925061159060608701611317565b949793965091946080013592915050565b6000602082840312156115b357600080fd5b813560038110610bd557600080fd5b6000602082840312156115d457600080fd5b5051919050565b600082516115ed818460208701611702565b9190910192915050565b602081016003831061161957634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000825180602084015261163e816040850160208701611702565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082198211156116b3576116b361175d565b500190565b6000826116c7576116c7611773565b500490565b60008160001904831182151516156116e6576116e661175d565b500290565b6000828210156116fd576116fd61175d565b500390565b60005b8381101561171d578181015183820152602001611705565b83811115610ebb5750506000910152565b60006000198214156117425761174261175d565b5060010190565b60008261175857611758611773565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8015158114610fdc57600080fdfea2646970667358221220ff58d99b74dc7a1d080c309f00ef63c34bc78cafd4d6d9fc786d938c6c24981764736f6c63430008060033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Campaign> {
    return super.deploy(overrides || {}) as Promise<Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }
  static readonly contractName: "Campaign";
  public readonly contractName: "Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}
