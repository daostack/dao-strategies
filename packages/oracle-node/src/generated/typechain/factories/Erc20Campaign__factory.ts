/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Erc20Campaign, Erc20CampaignInterface } from "../Erc20Campaign";

const _abi = [
  {
    inputs: [],
    name: "ActiveChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyInChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ValueIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "CHALLENGE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "initErc20Campaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "rewardsAvailableToClaimer",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lock",
        type: "bool",
      },
    ],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFundsReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferValueIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061129f806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80637dc0d1d0116100de578063c3a079ed11610097578063d3f3235711610071578063d3f323571461030d578063d54ad2a114610320578063da4493f614610329578063f7c618c11461033257600080fd5b8063c3a079ed146102c6578063c884ef83146102d0578063cf309012146102f057600080fd5b80637dc0d1d01461027757806385e3f9971461028a5780639637f47514610299578063a9ec3a1b146102a2578063b4f205be146102ab578063bf27f585146102be57600080fd5b8063619d519411610130578063619d51941461022457806368742da614610237578063717f90921461024a578063750142e61461025357806375e07c2d1461025c5780637d1881381461026457600080fd5b80630787bc271461017857806317b9d05e146101ab57806329cbe051146101c05780633d13f874146101d3578063414f33dd146101e6578063452a9320146101f9575b600080fd5b610198610186366004610ea0565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b6101be6101b9366004610f83565b610345565b005b6101be6101ce366004610fef565b610427565b6101be6101e1366004610ebd565b610459565b6101be6101f4366004610fa5565b610543565b60055461020c906001600160a01b031681565b6040516001600160a01b0390911681526020016101a2565b6101be610232366004610f49565b61060c565b6101be610245366004610ea0565b61064a565b61019860045481565b61019860075481565b610198610726565b6101be61027236600461106f565b610741565b60065461020c906001600160a01b031681565b610198670de0b6b3a764000081565b61019860025481565b61019860015481565b6101986102b9366004610ebd565b6107d3565b6101986108d3565b61019862093a8081565b6101986102de366004610ea0565b600a6020526000908152604090205481565b6009546102fd9060ff1681565b60405190151581526020016101a2565b6101be61031b36600461104e565b6108e5565b61019860085481565b61019860035481565b600c5461020c906001600160a01b031681565b6006546001600160a01b03163314610370576040516380fee10560e01b815260040160405180910390fd5b60095460ff1615610394576040516303cb96db60e21b815260040160405180910390fd5b600254158015906103a6575060035442105b156103c457604051633420251360e11b815260040160405180910390fd5b600280546001558290556103db62093a804261114d565b60038190556040805184815260208101849052908101919091527ff538af40d5ad77456cbcd96a5be317d724e66e0e08eb217c14812308bd43d35e906060015b60405180910390a15050565b61043385858585610543565b600c80546001600160a01b0319166001600160a01b039290921691909117905550505050565b6000610467858585856107d3565b90508061048757604051636d363c4560e01b815260040160405180910390fd5b6001600160a01b0385166000908152600a6020526040812080548392906104af90849061114d565b9250508190555080600860008282546104c8919061114d565b9250508190555080600760008282546104e191906111a6565b909155506104f190508582610a7f565b604080516001600160a01b0387168152602081018690529081018290527f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7906060015b60405180910390a15050505050565b600061054f6001610a9a565b90508015610567576000805461ff0019166101001790555b6004849055600580546001600160a01b038086166001600160a01b031992831617909255600680549285169290911691909117905584156105bc5760028590556105b462093a804261114d565b6003556105c3565b6000196003555b8015610605576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602001610534565b5050505050565b6005546001600160a01b0316331461063757604051636570ecab60e11b815260040160405180910390fd5b6009805460ff1916911515919091179055565b60095460ff16801561065c5750600154155b1561070a576007546001600160a01b0382166000908152600b6020526040812054909161068891611165565b9050806106a85760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b0382166000908152600b60205260408120556106cb8282610a7f565b604080516001600160a01b0384168152602081018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910161041b565b60405163209a769d60e11b815260040160405180910390fd5b50565b60006003544211610738575060015490565b6002545b905090565b336000908152600b60205260408120805483929061076090849061114d565b925050819055508060076000828254610779919061114d565b9091555050600c54610796906001600160a01b0316333084610b2b565b60408051338152602081018390527fa8044513073c23047a922f0bf7142f18c341a73184b9f8055349b4415fb9d6ca91015b60405180910390a150565b6000806107de610726565b6040516bffffffffffffffffffffffff19606089901b16602082015260348101879052909150600090605401604051602081830303815290604052805190602001209050610862858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250859150610b9c9050565b61087f576040516309bde33960e01b815260040160405180910390fd5b6001600160a01b0387166000908152600a6020526040902054670de0b6b3a7640000876108aa6108d3565b6108b49190611187565b6108be9190611165565b6108c891906111a6565b979650505050505050565b600060085460075461073c919061114d565b6005546001600160a01b0316331461091057604051636570ecab60e11b815260040160405180910390fd5b60095460ff1615610934576040516303cb96db60e21b815260040160405180910390fd5b60025415801590610946575060035442115b1561096457604051631b69dd1760e21b815260040160405180910390fd5b600060025560001960035560018160028111156109835761098361121a565b14156109df57604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b1580156109c257600080fd5b505af11580156109d6573d6000803e3d6000fd5b50505050610a50565b60028160028111156109f3576109f361121a565b1415610a5057604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b5050600060015550505b7f0b700a39eebc9d322d0a5829d3d6447d9e000f73a89a7baa6a0fa28a5ec9c8d0816040516107c891906110a4565b600c54610a96906001600160a01b03168383610bb4565b5050565b60008054610100900460ff1615610aea578160ff166001148015610abd5750303b155b610ae25760405162461bcd60e51b8152600401610ad9906110ff565b60405180910390fd5b506000919050565b60005460ff808416911610610b115760405162461bcd60e51b8152600401610ad9906110ff565b506000805460ff191660ff92909216919091179055600190565b6040516001600160a01b0380851660248301528316604482015260648101829052610b969085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610be9565b50505050565b600082610ba98584610cbb565b1490505b9392505050565b6040516001600160a01b038316602482015260448101829052610be490849063a9059cbb60e01b90606401610b5f565b505050565b6000610c3e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d2f9092919063ffffffff16565b805190915015610be45780806020019051810190610c5c9190610f66565b610be45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ad9565b600081815b8451811015610d27576000858281518110610cdd57610cdd611230565b60200260200101519050808311610d035760008381526020829052604090209250610d14565b600081815260208490526040902092505b5080610d1f816111e9565b915050610cc0565b509392505050565b6060610d3e8484600085610d46565b949350505050565b606082471015610da75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610ad9565b6001600160a01b0385163b610dfe5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ad9565b600080866001600160a01b03168587604051610e1a9190611088565b60006040518083038185875af1925050503d8060008114610e57576040519150601f19603f3d011682016040523d82523d6000602084013e610e5c565b606091505b50915091506108c882828660608315610e76575081610bad565b825115610e865782518084602001fd5b8160405162461bcd60e51b8152600401610ad991906110cc565b600060208284031215610eb257600080fd5b8135610bad81611246565b60008060008060608587031215610ed357600080fd5b8435610ede81611246565b935060208501359250604085013567ffffffffffffffff80821115610f0257600080fd5b818701915087601f830112610f1657600080fd5b813581811115610f2557600080fd5b8860208260051b8501011115610f3a57600080fd5b95989497505060200194505050565b600060208284031215610f5b57600080fd5b8135610bad8161125b565b600060208284031215610f7857600080fd5b8151610bad8161125b565b60008060408385031215610f9657600080fd5b50508035926020909101359150565b60008060008060808587031215610fbb57600080fd5b84359350602085013592506040850135610fd481611246565b91506060850135610fe481611246565b939692955090935050565b600080600080600060a0868803121561100757600080fd5b8535945060208601359350604086013561102081611246565b9250606086013561103081611246565b9150608086013561104081611246565b809150509295509295909350565b60006020828403121561106057600080fd5b813560038110610bad57600080fd5b60006020828403121561108157600080fd5b5035919050565b6000825161109a8184602087016111bd565b9190910192915050565b60208101600383106110c657634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600082518060208401526110eb8160408501602087016111bd565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000821982111561116057611160611204565b500190565b60008261118257634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156111a1576111a1611204565b500290565b6000828210156111b8576111b8611204565b500390565b60005b838110156111d85781810151838201526020016111c0565b83811115610b965750506000910152565b60006000198214156111fd576111fd611204565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461072357600080fd5b801515811461072357600080fdfea2646970667358221220f4c8f91e054ae91c3951c9d22bc88c80c440ae7676fede7e79c75b4a4ecf4e0a64736f6c63430008060033";

type Erc20CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Erc20CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Erc20Campaign__factory extends ContractFactory {
  constructor(...args: Erc20CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Erc20Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Erc20Campaign> {
    return super.deploy(overrides || {}) as Promise<Erc20Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Erc20Campaign {
    return super.attach(address) as Erc20Campaign;
  }
  connect(signer: Signer): Erc20Campaign__factory {
    return super.connect(signer) as Erc20Campaign__factory;
  }
  static readonly contractName: "Erc20Campaign";
  public readonly contractName: "Erc20Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Erc20CampaignInterface {
    return new utils.Interface(_abi) as Erc20CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc20Campaign {
    return new Contract(address, _abi, signerOrProvider) as Erc20Campaign;
  }
}
