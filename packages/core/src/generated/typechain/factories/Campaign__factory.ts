/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "MerkleRootUpdateNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NoAssetsToWithdraw",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyInChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assset",
        type: "address",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Fund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "locked",
        type: "bool",
      },
    ],
    name: "Lock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRootUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTIVATION_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ACTIVE_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHALLENGE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "balanceOfAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_activationTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_CHALLENGE_PERIOD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ACTIVATION_PERIOD",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ACTIVE_DURATION",
        type: "uint256",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isChallengePeriod",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPendingActive",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRootUpdateAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "rewardsAvailableToClaimer",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lock",
        type: "bool",
      },
    ],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "totalReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyShares",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "withdrawAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060018055611834806100246000396000f3fe6080604052600436106101d05760003560e01c80637b1837de116100f7578063be8b768611610095578063cf30901211610064578063cf30901214610511578063d3f323571461052b578063da4493f61461054b578063ef5d9ae81461056157600080fd5b8063be8b76861461049b578063c1d89941146104bb578063c24e4778146104db578063c3a079ed146104fb57600080fd5b806385e3f997116100d157806385e3f997146104335780639637f4751461044f578063a98acb4614610465578063a9ec3a1b1461048557600080fd5b80637b1837de146103e95780637c99ca6d146103fc5780637dc0d1d01461041357600080fd5b8063452a93201161016f578063619d51941161013e578063619d5194146103895780636c4fbc4a146103a9578063717f9092146103be57806375e07c2d146103d457600080fd5b8063452a9320146102f75780634df9cfb31461032f578063510cbd9c1461034f578063574eab011461037457600080fd5b8063162dfe00116101ab578063162dfe001461026957806317b9d05e146102895780633e161940146102a957806340bcf748146102bf57600080fd5b80627c4d51146101e857806303380eb3146102115780630c9cbf0e1461023157600080fd5b366101e3576101e13460003361058e565b005b600080fd5b3480156101f457600080fd5b506101fe60045481565b6040519081526020015b60405180910390f35b34801561021d57600080fd5b506101e161022c3660046114c0565b610639565b34801561023d57600080fd5b506101fe61024c3660046113cd565b600c60209081526000928352604080842090915290825290205481565b34801561027557600080fd5b506101e1610284366004611466565b6106a2565b34801561029557600080fd5b506101e16102a43660046115e5565b610755565b3480156102b557600080fd5b506101fe60035481565b3480156102cb57600080fd5b506101fe6102da3660046113cd565b600e60209081526000928352604080842090915290825290205481565b34801561030357600080fd5b50600954610317906001600160a01b031681565b6040516001600160a01b039091168152602001610208565b34801561033b57600080fd5b506101fe61034a3660046113b2565b610829565b34801561035b57600080fd5b5061036461085b565b6040519015158152602001610208565b34801561038057600080fd5b5061036461089f565b34801561039557600080fd5b506101e16103a436600461154a565b6108d1565b3480156103b557600080fd5b50610364610944565b3480156103ca57600080fd5b506101fe60085481565b3480156103e057600080fd5b506101fe610956565b6101e16103f7366004611400565b610975565b34801561040857600080fd5b506007544211610364565b34801561041f57600080fd5b50600a54610317906001600160a01b031681565b34801561043f57600080fd5b506101fe670de0b6b3a764000081565b34801561045b57600080fd5b506101fe60065481565b34801561047157600080fd5b506101e1610480366004611584565b610a03565b34801561049157600080fd5b506101fe60055481565b3480156104a757600080fd5b506101fe6104b636600461142a565b610b5c565b3480156104c757600080fd5b506101fe6104d63660046113b2565b610bbf565b3480156104e757600080fd5b506101e16104f63660046113cd565b610c53565b34801561050757600080fd5b506101fe60025481565b34801561051d57600080fd5b50600d546103649060ff1681565b34801561053757600080fd5b506101e1610546366004611607565b610d32565b34801561055757600080fd5b506101fe60075481565b34801561056d57600080fd5b506101fe61057c3660046113b2565b600b6020526000908152604090205481565b6001600160a01b038083166000908152600e60209081526040808320938516835292905290812080548592906105c59084906116b8565b90915550506001600160a01b038216156105ee576105ee6001600160a01b038316823086610e33565b604080518481526001600160a01b0384811660208301528316917fa5e8482b3a4fbac393476288e591dd9316d7304a537b26f9b67167f0ce19750f91015b60405180910390a2505050565b610645868686866106a2565b60005b60ff811682111561069957610687878785858560ff1681811061066d5761066d6117d7565b905060200201602081019061068291906113b2565b610ea4565b8061069181611761565b915050610648565b50505050505050565b60006106ac610956565b6040516bffffffffffffffffffffffff19606088901b16602082015260348101869052909150600090605401604051602081830303815290604052805190602001209050610730848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250859150610f7e9050565b61074d576040516309bde33960e01b815260040160405180910390fd5b505050505050565b600a546001600160a01b03163314610780576040516380fee10560e01b815260040160405180910390fd5b600d5460ff16156107a4576040516303cb96db60e21b815260040160405180910390fd5b6107ac61085b565b6107c957604051631aeebaf760e11b815260040160405180910390fd5b600680546005558290556002546107e090426116b8565b6007819055604080518481526020810184905280820192909252517f93d244ac7b8f4282b061b1dcb3f543f36f06af40a7bfdefe04fc913ef7ea54f99181900360600190a15050565b6001600160a01b0381166000908152600b602052604081205461084b83610bbf565b61085591906116b8565b92915050565b6000610865610944565b156108705750600090565b6004546003546007546108839042611703565b61088d9190611781565b10156108995750600090565b50600190565b600d5460009060ff1680156108b45750600554155b80156108c05750600654155b156108cb5750600190565b50600090565b6009546001600160a01b031633146108fc57604051636570ecab60e11b815260040160405180910390fd5b600d805460ff19168215159081179091556040519081527f73cb6ff886d89c3816d03270daa43e4789d7c218d9a12960651ff278e1fef1f1906020015b60405180910390a150565b60006007544210156108cb5750600190565b6000610963600754421190565b61096e575060055490565b5060065490565b600260015414156109cd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001556001600160a01b0382166109f0576109eb34833361058e565b6109fb565b6109fb81833361058e565b505060018055565b600054610100900460ff1615808015610a235750600054600160ff909116105b80610a3d5750303b158015610a3d575060005460ff166001145b610aa05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109c4565b6000805460ff191660011790558015610ac3576000805461ff0019166101001790555b6008889055600980546001600160a01b03808a166001600160a01b031992831617909255600a80549289169290911691909117905560078590556002849055600383905560048290558015610b52576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050505050565b6001600160a01b038082166000908152600c60209081526040808320938716835292905290812054670de0b6b3a764000084610b9785610829565b610ba191906116e4565b610bab91906116d0565b610bb59190611703565b90505b9392505050565b60006001600160a01b03821615610c4c576040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610c0f57600080fd5b505afa158015610c23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c479190611628565b610855565b4792915050565b610c5b61089f565b15610d19576001600160a01b038082166000908152600e602090815260408083209386168352929052205480610ca457604051635da3252f60e11b815260040160405180910390fd5b6001600160a01b038083166000908152600e60209081526040808320938716835292905290812055610cd7838284610f94565b604080518281526001600160a01b0384811660208301528516917f56c54ba9bd38d8fd62012e42c7ee564519b09763c426d331b3661b537ead19b2910161062c565b60405163209a769d60e11b815260040160405180910390fd5b6009546001600160a01b03163314610d5d57604051636570ecab60e11b815260040160405180910390fd5b600d5460ff1615610d81576040516303cb96db60e21b815260040160405180910390fd5b610d89610944565b610da657604051631b69dd1760e21b815260040160405180910390fd5b60006006556001816002811115610dbf57610dbf6117c1565b1415610dd757600d805460ff19166001179055610e04565b6002816002811115610deb57610deb6117c1565b1415610e0457600d805460ff1916600117905560006005555b7f0b700a39eebc9d322d0a5829d3d6447d9e000f73a89a7baa6a0fa28a5ec9c8d081604051610939919061165d565b6040516001600160a01b0380851660248301528316604482015260648101829052610e9e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611056565b50505050565b6000610eb1848484610b5c565b6001600160a01b038084166000908152600c60209081526040808320938916835292905290812080549293508392909190610eed9084906116b8565b90915550506001600160a01b0382166000908152600b602052604081208054839290610f1a9084906116b8565b90915550610f2b9050848284610f94565b60408051848152602081018390526001600160a01b03848116828401529151918616917fb6fe5ce185a3773d47e919f57c7edfd102c91cb7833b2be405c4de89d9980fd79181900360600190a250505050565b600082610f8b8584611128565b14949350505050565b6001600160a01b03811661103d576000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610fef576040519150601f19603f3d011682016040523d82523d6000602084013e610ff4565b606091505b5050905080610e9e5760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016109c4565b6110516001600160a01b0382168484611175565b505050565b60006110ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111a59092919063ffffffff16565b80519091501561105157808060200190518101906110c99190611567565b6110515760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109c4565b600081815b845181101561116d576111598286838151811061114c5761114c6117d7565b60200260200101516111b4565b91508061116581611746565b91505061112d565b509392505050565b6040516001600160a01b03831660248201526044810182905261105190849063a9059cbb60e01b90606401610e67565b6060610bb584846000856111e0565b60008183106111d0576000828152602084905260409020610bb8565b5060009182526020526040902090565b6060824710156112415760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109c4565b6001600160a01b0385163b6112985760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109c4565b600080866001600160a01b031685876040516112b49190611641565b60006040518083038185875af1925050503d80600081146112f1576040519150601f19603f3d011682016040523d82523d6000602084013e6112f6565b606091505b5091509150611306828286611311565b979650505050505050565b60608315611320575081610bb8565b8251156113305782518084602001fd5b8160405162461bcd60e51b81526004016109c49190611685565b80356001600160a01b038116811461136157600080fd5b919050565b60008083601f84011261137857600080fd5b50813567ffffffffffffffff81111561139057600080fd5b6020830191508360208260051b85010111156113ab57600080fd5b9250929050565b6000602082840312156113c457600080fd5b610bb88261134a565b600080604083850312156113e057600080fd5b6113e98361134a565b91506113f76020840161134a565b90509250929050565b6000806040838503121561141357600080fd5b61141c8361134a565b946020939093013593505050565b60008060006060848603121561143f57600080fd5b6114488461134a565b92506020840135915061145d6040850161134a565b90509250925092565b6000806000806060858703121561147c57600080fd5b6114858561134a565b935060208501359250604085013567ffffffffffffffff8111156114a857600080fd5b6114b487828801611366565b95989497509550505050565b600080600080600080608087890312156114d957600080fd5b6114e28761134a565b955060208701359450604087013567ffffffffffffffff8082111561150657600080fd5b6115128a838b01611366565b9096509450606089013591508082111561152b57600080fd5b5061153889828a01611366565b979a9699509497509295939492505050565b60006020828403121561155c57600080fd5b8135610bb8816117ed565b60006020828403121561157957600080fd5b8151610bb8816117ed565b600080600080600080600060e0888a03121561159f57600080fd5b873596506115af6020890161134a565b95506115bd6040890161134a565b969995985095966060810135965060808101359560a0820135955060c0909101359350915050565b600080604083850312156115f857600080fd5b50508035926020909101359150565b60006020828403121561161957600080fd5b813560038110610bb857600080fd5b60006020828403121561163a57600080fd5b5051919050565b6000825161165381846020870161171a565b9190910192915050565b602081016003831061167f57634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600082518060208401526116a481604085016020870161171a565b601f01601f19169190910160400192915050565b600082198211156116cb576116cb611795565b500190565b6000826116df576116df6117ab565b500490565b60008160001904831182151516156116fe576116fe611795565b500290565b60008282101561171557611715611795565b500390565b60005b8381101561173557818101518382015260200161171d565b83811115610e9e5750506000910152565b600060001982141561175a5761175a611795565b5060010190565b600060ff821660ff81141561177857611778611795565b60010192915050565b600082611790576117906117ab565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b80151581146117fb57600080fd5b5056fea264697066735822122037743e6511a9feb3d6cc8dfd9334755f1ba0f85769b8892e5bc028757f6a4d0164736f6c63430008060033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Campaign> {
    return super.deploy(overrides || {}) as Promise<Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }
  static readonly contractName: "Campaign";
  public readonly contractName: "Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}
