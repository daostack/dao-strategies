/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Campaign, CampaignInterface } from "../Campaign";

const _abi = [
  {
    inputs: [],
    name: "ActiveChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "ClaimingNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "Locked",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyGuardian",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyInChallengePeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "Challenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assset",
        type: "address",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Fund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesMerkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "sharesUri",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "activationTime",
        type: "uint256",
      },
    ],
    name: "SharesMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "TOTAL_SHARES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "balanceOfAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Campaign.ChallengeAction",
        name: "action",
        type: "uint8",
      },
    ],
    name: "challenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "challengePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_strategyUri",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_challengePeriod",
        type: "uint256",
      },
    ],
    name: "initCampaign",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isRootActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "locked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sharesMerkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sharesUri",
        type: "bytes32",
      },
    ],
    name: "proposeShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "rewardsAvailableToClaimer",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_lock",
        type: "bool",
      },
    ],
    name: "setLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyUri",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "totalFundsReceived",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "verifyShares",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506116c7806100206000396000f3fe6080604052600436106101695760003560e01c806375e07c2d116100d1578063be8b76861161008a578063d3f3235711610064578063d3f3235714610440578063da4493f614610460578063ef5d9ae814610476578063f3f480d9146104a357600080fd5b8063be8b7686146103e6578063c1d8994114610406578063cf3090121461042657600080fd5b806375e07c2d146103565780637b1837de1461036b5780637dc0d1d01461037e57806385e3f9971461039e5780639637f475146103ba578063a9ec3a1b146103d057600080fd5b806317b9d05e1161012357806317b9d05e1461027057806340bcf74814610290578063452a9320146102c857806360b3710b14610300578063619d519414610320578063717f90921461034057600080fd5b80620fa9fb1461018157806301ab86ec146101a157806303380eb3146101ca5780630c9cbf0e146101ea578063162dfe001461023057806316ccc1331461025057600080fd5b3661017c5761017a346000336104b9565b005b600080fd5b34801561018d57600080fd5b5061017a61019c366004611241565b61056d565b3480156101ad57600080fd5b506003544210155b60405190151581526020015b60405180910390f35b3480156101d657600080fd5b5061017a6101e5366004611334565b610663565b3480156101f657600080fd5b50610222610205366004611241565b600a60209081526000928352604080842090915290825290205481565b6040519081526020016101c1565b34801561023c57600080fd5b5061017a61024b3660046112da565b6106cc565b34801561025c57600080fd5b5061022261026b366004611226565b61077f565b34801561027c57600080fd5b5061017a61028b3660046113f8565b6107b1565b34801561029c57600080fd5b506102226102ab366004611241565b600b60209081526000928352604080842090915290825290205481565b3480156102d457600080fd5b506005546102e8906001600160a01b031681565b6040516001600160a01b0390911681526020016101c1565b34801561030c57600080fd5b5061017a61031b36600461141a565b610890565b34801561032c57600080fd5b5061017a61033b3660046113be565b610962565b34801561034c57600080fd5b5061022260045481565b34801561036257600080fd5b506102226109a0565b61017a610379366004611274565b6109c0565b34801561038a57600080fd5b506006546102e8906001600160a01b031681565b3480156103aa57600080fd5b50610222670de0b6b3a764000081565b3480156103c657600080fd5b5061022260025481565b3480156103dc57600080fd5b5061022260015481565b3480156103f257600080fd5b5061022261040136600461129e565b6109e4565b34801561041257600080fd5b50610222610421366004611226565b610a47565b34801561043257600080fd5b506009546101b59060ff1681565b34801561044c57600080fd5b5061017a61045b366004611468565b610adb565b34801561046c57600080fd5b5061022260035481565b34801561048257600080fd5b50610222610491366004611226565b60086020526000908152604090205481565b3480156104af57600080fd5b5061022260075481565b6001600160a01b038083166000908152600b60209081526040808320938516835292905290812080548592906104f0908490611567565b90915550506001600160a01b03821615610519576105196001600160a01b038316823086610c80565b604080516001600160a01b038084168252602082018690528416918101919091527fa5e8482b3a4fbac393476288e591dd9316d7304a537b26f9b67167f0ce19750f906060015b60405180910390a1505050565b60095460ff16801561057f5750600154155b15610646576001600160a01b038082166000908152600b6020908152604080832093861683529290522054806105c85760405163043f9e1160e41b815260040160405180910390fd5b6001600160a01b038083166000908152600b602090815260408083209387168352929052908120556105fb838284610cf1565b604080516001600160a01b038086168252602082018490528416918101919091527f56c54ba9bd38d8fd62012e42c7ee564519b09763c426d331b3661b537ead19b290606001610560565b60405163209a769d60e11b815260040160405180910390fd5b5050565b61066f868686866106cc565b60005b60ff81168211156106c3576106b1878785858560ff168181106106975761069761166a565b90506020020160208101906106ac9190611226565b610db8565b806106bb8161161e565b915050610672565b50505050505050565b60006106d66109a0565b6040516bffffffffffffffffffffffff19606088901b1660208201526034810186905290915060009060540160405160208183030381529060405280519060200120905061075a848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250869250859150610e969050565b610777576040516309bde33960e01b815260040160405180910390fd5b505050505050565b6001600160a01b0381166000908152600860205260408120546107a183610a47565b6107ab9190611567565b92915050565b6006546001600160a01b031633146107dc576040516380fee10560e01b815260040160405180910390fd5b60095460ff1615610800576040516303cb96db60e21b815260040160405180910390fd5b60025415801590610812575060035442105b1561083057604051633420251360e11b815260040160405180910390fd5b600280546001558290556007546108479042611567565b6003819055604080518481526020810184905280820192909252517ff538af40d5ad77456cbcd96a5be317d724e66e0e08eb217c14812308bd43d35e9181900360600190a15050565b600061089c6001610eac565b905080156108b4576000805461ff0019166101001790555b6004859055600580546001600160a01b038087166001600160a01b03199283161790925560068054928616929091169190911790556007829055851561090e5760028690556007546109069042611567565b600355610915565b6000196003555b8015610777576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b6005546001600160a01b0316331461098d57604051636570ecab60e11b815260040160405180910390fd5b6009805460ff1916911515919091179055565b60006109ae60035442101590565b6109b9575060015490565b5060025490565b6001600160a01b0382166109d95761065f3483336104b9565b61065f8183336104b9565b6001600160a01b038082166000908152600a60209081526040808320938716835292905290812054670de0b6b3a764000084610a1f8561077f565b610a2991906115a1565b610a33919061157f565b610a3d91906115c0565b90505b9392505050565b60006001600160a01b03821615610ad4576040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b158015610a9757600080fd5b505afa158015610aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf9190611489565b6107ab565b4792915050565b6005546001600160a01b03163314610b0657604051636570ecab60e11b815260040160405180910390fd5b60095460ff1615610b2a576040516303cb96db60e21b815260040160405180910390fd5b60025415801590610b3c575060035442115b15610b5a57604051631b69dd1760e21b815260040160405180910390fd5b60006002556000196003556001816002811115610b7957610b79611654565b1415610bd557604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b158015610bb857600080fd5b505af1158015610bcc573d6000803e3d6000fd5b50505050610c46565b6002816002811115610be957610be9611654565b1415610c4657604051631867546560e21b815260016004820152309063619d519490602401600060405180830381600087803b158015610c2857600080fd5b505af1158015610c3c573d6000803e3d6000fd5b5050600060015550505b7f0b700a39eebc9d322d0a5829d3d6447d9e000f73a89a7baa6a0fa28a5ec9c8d081604051610c7591906114be565b60405180910390a150565b6040516001600160a01b0380851660248301528316604482015260648101829052610ceb9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f39565b50505050565b6001600160a01b038116610d9f576000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610d4c576040519150601f19603f3d011682016040523d82523d6000602084013e610d51565b606091505b5050905080610ceb5760405162461bcd60e51b8152602060048201526015602482015274195d1a195c881d1c985b9cd9995c8819985a5b1959605a1b60448201526064015b60405180910390fd5b610db36001600160a01b038216848461100b565b505050565b6000610dc58484846109e4565b6001600160a01b038084166000908152600a60209081526040808320938916835292905290812080549293508392909190610e01908490611567565b90915550506001600160a01b03821660009081526008602052604081208054839290610e2e908490611567565b90915550610e3f9050848284610cf1565b604080516001600160a01b038681168252602082018690528183018490528416606082015290517fb6fe5ce185a3773d47e919f57c7edfd102c91cb7833b2be405c4de89d9980fd79181900360800190a150505050565b600082610ea3858461103b565b14949350505050565b60008054610100900460ff1615610ef3578160ff166001148015610ecf5750303b155b610eeb5760405162461bcd60e51b8152600401610d9690611519565b506000919050565b60005460ff808416911610610f1a5760405162461bcd60e51b8152600401610d9690611519565b506000805460ff191660ff92909216919091179055600190565b919050565b6000610f8e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110af9092919063ffffffff16565b805190915015610db35780806020019051810190610fac91906113db565b610db35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d96565b6040516001600160a01b038316602482015260448101829052610db390849063a9059cbb60e01b90606401610cb4565b600081815b84518110156110a757600085828151811061105d5761105d61166a565b602002602001015190508083116110835760008381526020829052604090209250611094565b600081815260208490526040902092505b508061109f81611603565b915050611040565b509392505050565b6060610a3d8484600085856001600160a01b0385163b6111115760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d96565b600080866001600160a01b0316858760405161112d91906114a2565b60006040518083038185875af1925050503d806000811461116a576040519150601f19603f3d011682016040523d82523d6000602084013e61116f565b606091505b509150915061117f82828661118a565b979650505050505050565b60608315611199575081610a40565b8251156111a95782518084602001fd5b8160405162461bcd60e51b8152600401610d9691906114e6565b80356001600160a01b0381168114610f3457600080fd5b60008083601f8401126111ec57600080fd5b50813567ffffffffffffffff81111561120457600080fd5b6020830191508360208260051b850101111561121f57600080fd5b9250929050565b60006020828403121561123857600080fd5b610a40826111c3565b6000806040838503121561125457600080fd5b61125d836111c3565b915061126b602084016111c3565b90509250929050565b6000806040838503121561128757600080fd5b611290836111c3565b946020939093013593505050565b6000806000606084860312156112b357600080fd5b6112bc846111c3565b9250602084013591506112d1604085016111c3565b90509250925092565b600080600080606085870312156112f057600080fd5b6112f9856111c3565b935060208501359250604085013567ffffffffffffffff81111561131c57600080fd5b611328878288016111da565b95989497509550505050565b6000806000806000806080878903121561134d57600080fd5b611356876111c3565b955060208701359450604087013567ffffffffffffffff8082111561137a57600080fd5b6113868a838b016111da565b9096509450606089013591508082111561139f57600080fd5b506113ac89828a016111da565b979a9699509497509295939492505050565b6000602082840312156113d057600080fd5b8135610a4081611680565b6000602082840312156113ed57600080fd5b8151610a4081611680565b6000806040838503121561140b57600080fd5b50508035926020909101359150565b600080600080600060a0868803121561143257600080fd5b8535945060208601359350611449604087016111c3565b9250611457606087016111c3565b949793965091946080013592915050565b60006020828403121561147a57600080fd5b813560038110610a4057600080fd5b60006020828403121561149b57600080fd5b5051919050565b600082516114b48184602087016115d7565b9190910192915050565b60208101600383106114e057634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600082518060208401526115058160408501602087016115d7565b601f01601f19169190910160400192915050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000821982111561157a5761157a61163e565b500190565b60008261159c57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156115bb576115bb61163e565b500290565b6000828210156115d2576115d261163e565b500390565b60005b838110156115f25781810151838201526020016115da565b83811115610ceb5750506000910152565b60006000198214156116175761161761163e565b5060010190565b600060ff821660ff8114156116355761163561163e565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b801515811461168e57600080fd5b5056fea26469706673582212209051829efec1db54507b501a30db90227c84871a1dcbb0b23956e42604a6217164736f6c63430008060033";

type CampaignConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Campaign__factory extends ContractFactory {
  constructor(...args: CampaignConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Campaign";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Campaign> {
    return super.deploy(overrides || {}) as Promise<Campaign>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Campaign {
    return super.attach(address) as Campaign;
  }
  connect(signer: Signer): Campaign__factory {
    return super.connect(signer) as Campaign__factory;
  }
  static readonly contractName: "Campaign";
  public readonly contractName: "Campaign";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignInterface {
    return new utils.Interface(_abi) as CampaignInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Campaign {
    return new Contract(address, _abi, signerOrProvider) as Campaign;
  }
}
